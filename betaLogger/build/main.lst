ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemClock_Config:
  24              	.LFB67:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "i2c.h"
  26:Src/main.c    **** #include "spi.h"
  27:Src/main.c    **** #include "tim.h"
  28:Src/main.c    **** #include "usart.h"
  29:Src/main.c    **** #include "usb.h"
  30:Src/main.c    **** #include "gpio.h"
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN Includes */
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 2


  34:Src/main.c    **** #include <string.h>
  35:Src/main.c    **** #include <stdio.h>
  36:Src/main.c    **** #include "ff.h"
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END Includes */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PTD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PTD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PD */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PD */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  51:Src/main.c    **** /* USER CODE BEGIN PM */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PM */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** FATFS SDFatFs;  /* File system object for SD card logical drive */
  59:Src/main.c    **** FIL MyFile;     /* File object */
  60:Src/main.c    **** char SDPath[4]; /* SD card logical drive path */
  61:Src/main.c    **** uint32_t byteswritten;                     /* File write/read counts */
  62:Src/main.c    **** FRESULT res;
  63:Src/main.c    **** 
  64:Src/main.c    **** char textTxBuffer[500];
  65:Src/main.c    **** char mpuBuffer[42];
  66:Src/main.c    **** char timeBuffer[12];
  67:Src/main.c    **** 
  68:Src/main.c    **** uint8_t gpsReady;
  69:Src/main.c    **** uint8_t rawGps[69];
  70:Src/main.c    **** uint8_t sdBufferA[20][84];
  71:Src/main.c    **** uint8_t sdBufferB[20][84];
  72:Src/main.c    **** uint8_t sdBufferC[20][84];
  73:Src/main.c    **** 
  74:Src/main.c    **** uint16_t rawAdc[350];
  75:Src/main.c    **** uint8_t rawMpu[14];
  76:Src/main.c    **** uint8_t adcReady, mpuReady, timReady, nBuffer;
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
  90:Src/main.c    **** /**
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 3


  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    ****     /* USER CODE BEGIN 1 */
  97:Src/main.c    ****     char fileName[13];
  98:Src/main.c    ****     char fileHeader[135];
  99:Src/main.c    ****     uint16_t fileNumber = 0;
 100:Src/main.c    **** 
 101:Src/main.c    ****     uint8_t mpuConfigTx, mpuConfigRx;
 102:Src/main.c    **** 
 103:Src/main.c    ****     /* USER CODE END 1 */
 104:Src/main.c    **** 
 105:Src/main.c    **** 
 106:Src/main.c    ****     /* MCU Configuration--------------------------------------------------------*/
 107:Src/main.c    **** 
 108:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Src/main.c    ****     HAL_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* USER CODE BEGIN Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****     /* USER CODE END Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****     /* Configure the system clock */
 116:Src/main.c    ****     SystemClock_Config();
 117:Src/main.c    **** 
 118:Src/main.c    ****     /* USER CODE BEGIN SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****     /* USER CODE END SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* Initialize all configured peripherals */
 123:Src/main.c    ****     MX_GPIO_Init();
 124:Src/main.c    ****     MX_DMA_Init();
 125:Src/main.c    ****     MX_TIM3_Init();
 126:Src/main.c    ****     MX_USART1_UART_Init();
 127:Src/main.c    ****     MX_SPI1_Init();
 128:Src/main.c    ****     MX_USART3_UART_Init();
 129:Src/main.c    ****     MX_ADC1_Init();
 130:Src/main.c    ****     MX_I2C1_Init();
 131:Src/main.c    ****     MX_USB_PCD_Init();
 132:Src/main.c    ****     /* USER CODE BEGIN 2 */
 133:Src/main.c    ****     sprintf(textTxBuffer, "betaLogger USART1 test\r");
 134:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)textTxBuffer, strlen(textTxBuffer), 500);
 135:Src/main.c    **** 
 136:Src/main.c    ****     f_mount(&SDFatFs, (TCHAR const *)SDPath, 0);
 137:Src/main.c    ****     while (res == FR_OK) {
 138:Src/main.c    ****         sprintf(fileName, "file%04d.dlf", ++fileNumber);
 139:Src/main.c    ****         res = f_open(&MyFile, fileName, FA_OPEN_EXISTING | FA_READ);
 140:Src/main.c    ****     }
 141:Src/main.c    ****     f_open(&MyFile, fileName, FA_OPEN_ALWAYS | FA_WRITE);
 142:Src/main.c    ****     sprintf(fileHeader, "#V2\r#DATASTART\rDatalog Time; GPS Latitude; GPS Longitude; GPS Speed;Ax;A
 143:Src/main.c    ****     fileHeader[134] = 0x0A;
 144:Src/main.c    ****     f_write(&MyFile, fileHeader, sizeof(fileHeader), (void *)&byteswritten);
 145:Src/main.c    ****     f_sync(&MyFile);
 146:Src/main.c    **** 
 147:Src/main.c    **** 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 4


 148:Src/main.c    ****     for(int i = 0; i < 20; i++) {
 149:Src/main.c    ****         for(int j = 0; j < 82; j++) {
 150:Src/main.c    ****             sdBufferA[i][j] = 0x30;
 151:Src/main.c    ****         }
 152:Src/main.c    ****         sdBufferA[i][10] = 0x41;
 153:Src/main.c    ****         sdBufferA[i][22] = 0x41;
 154:Src/main.c    ****         sdBufferA[i][34] = 0x41;
 155:Src/main.c    ****         sdBufferA[i][40] = 0x41;
 156:Src/main.c    ****         sdBufferA[i][47] = 0x41;
 157:Src/main.c    ****         sdBufferA[i][54] = 0x41;
 158:Src/main.c    ****         sdBufferA[i][61] = 0x41;
 159:Src/main.c    ****         sdBufferA[i][68] = 0x41;
 160:Src/main.c    ****         sdBufferA[i][75] = 0x41;
 161:Src/main.c    ****         sdBufferA[i][82] = 0x0D;
 162:Src/main.c    ****         sdBufferA[i][83] = 0x0A;
 163:Src/main.c    ****     }
 164:Src/main.c    **** 
 165:Src/main.c    ****     for(int i = 0; i < 20; i++) {
 166:Src/main.c    ****         for(int j = 0; j < 84; j++) {
 167:Src/main.c    ****             sdBufferB[i][j] = sdBufferA[i][j];
 168:Src/main.c    ****             sdBufferC[i][j] = sdBufferA[i][j];
 169:Src/main.c    ****         }
 170:Src/main.c    ****     }
 171:Src/main.c    **** 
 172:Src/main.c    ****     mpuConfigTx = 0b00000000;
 173:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x6B, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
 174:Src/main.c    **** 
 175:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x75, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 176:Src/main.c    ****     // sprintf(txBuffer, "Slave Address: %x \r", mpuConfigRx);
 177:Src/main.c    ****     // HAL_UART_Transmit(&huart1, (uint8_t *)txBuffer, strlen(txBuffer), 500);
 178:Src/main.c    **** 
 179:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x1A, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 180:Src/main.c    ****     // sprintf(txBuffer, "FIFO config: %x \r", mpuConfigRx);
 181:Src/main.c    ****     // HAL_UART_Transmit(&huart1, (uint8_t *)txBuffer, strlen(txBuffer), 500);
 182:Src/main.c    **** 
 183:Src/main.c    ****     mpuConfigTx = 0b00001000;
 184:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x1B, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
 185:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x1B, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 186:Src/main.c    ****     // sprintf(txBuffer, "Gyr cfig: %x \r", mpuConfigRx);
 187:Src/main.c    ****     // HAL_UART_Transmit(&huart1, (uint8_t *)txBuffer, strlen(txBuffer), 500);
 188:Src/main.c    **** 
 189:Src/main.c    ****     mpuConfigTx = 0b00011000;
 190:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x1C, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
 191:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x1C, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 192:Src/main.c    ****     // sprintf(txBuffer, "Acc cfig: %x \r", mpuConfigRx);
 193:Src/main.c    ****     // HAL_UART_Transmit(&huart1, (uint8_t *)txBuffer, strlen(txBuffer), 500);
 194:Src/main.c    **** 
 195:Src/main.c    ****     HAL_TIM_Base_Start_IT(&htim3);
 196:Src/main.c    ****     // HAL_ADCEx_Calibration_Start(&hadc1);
 197:Src/main.c    ****     // HAL_ADC_Start_DMA(&hadc1, (uint32_t *) rawAdc, 350);
 198:Src/main.c    ****     HAL_UART_Receive_DMA(&huart3, (uint8_t *)&rawGps, 51);
 199:Src/main.c    **** 
 200:Src/main.c    ****     adcReady = 0;
 201:Src/main.c    ****     mpuReady = 0;
 202:Src/main.c    ****     gpsReady = 0;
 203:Src/main.c    ****     timReady = 0;
 204:Src/main.c    ****     nBuffer = 1;
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 5


 205:Src/main.c    ****     /* USER CODE END 2 */
 206:Src/main.c    **** 
 207:Src/main.c    ****     /* Infinite loop */
 208:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 209:Src/main.c    ****     while (1)
 210:Src/main.c    ****     {
 211:Src/main.c    ****         if (gpsReady == 0) {
 212:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
 213:Src/main.c    ****             if (rawGps[1] == 0x47 && rawGps[17] == 0x41) {
 214:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 215:Src/main.c    ****                 if(nBuffer == 1) {
 216:Src/main.c    ****                     sdBufferA[0][11] = 0x2D;				//-
 217:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 218:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+7];
 219:Src/main.c    ****                     }
 220:Src/main.c    ****                     sdBufferA[0][23] = 0x2D;				//-
 221:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 222:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+9];
 223:Src/main.c    ****                     }
 224:Src/main.c    ****                     for(int j = 35; j < 40; j++) { 			//speed
 225:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+11];
 226:Src/main.c    ****                     }
 227:Src/main.c    **** 
 228:Src/main.c    ****                     for(int i = 1; i < 20; i++) {
 229:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 230:Src/main.c    ****                             sdBufferA[i][j] = sdBufferA[0][j];
 231:Src/main.c    ****                         }
 232:Src/main.c    ****                     }
 233:Src/main.c    **** 
 234:Src/main.c    ****                     for(int i = 0; i < 20; i++) {
 235:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 236:Src/main.c    ****                             sdBufferB[i][j] = sdBufferA[i][j];
 237:Src/main.c    ****                             sdBufferC[i][j] = sdBufferA[i][j];
 238:Src/main.c    ****                         }
 239:Src/main.c    ****                     }
 240:Src/main.c    ****                 }
 241:Src/main.c    ****                 else if(nBuffer == 2) {
 242:Src/main.c    ****                     sdBufferB[0][11] = 0x2D;				//-
 243:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 244:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+7];
 245:Src/main.c    ****                     }
 246:Src/main.c    ****                     sdBufferB[0][23] = 0x2D;				//-
 247:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 248:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+9];
 249:Src/main.c    ****                     }
 250:Src/main.c    ****                     for(int j = 35; j < 40; j++) { 			//speed
 251:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+11];
 252:Src/main.c    ****                     }
 253:Src/main.c    **** 
 254:Src/main.c    ****                     for(int i = 1; i < 20; i++) {
 255:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 256:Src/main.c    ****                             sdBufferB[i][j] = sdBufferB[0][j];
 257:Src/main.c    ****                         }
 258:Src/main.c    ****                     }
 259:Src/main.c    **** 
 260:Src/main.c    ****                     for(int i = 0; i < 20; i++) {
 261:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 6


 262:Src/main.c    ****                             sdBufferA[i][j] = sdBufferB[i][j];
 263:Src/main.c    ****                             sdBufferC[i][j] = sdBufferB[i][j];
 264:Src/main.c    ****                         }
 265:Src/main.c    ****                     }
 266:Src/main.c    ****                 }
 267:Src/main.c    ****                 else if(nBuffer == 3) {
 268:Src/main.c    ****                     sdBufferC[0][11] = 0x2D;				//-
 269:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 270:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+7];
 271:Src/main.c    ****                     }
 272:Src/main.c    ****                     sdBufferC[0][23] = 0x2D;				//-
 273:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 274:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+9];
 275:Src/main.c    ****                     }
 276:Src/main.c    ****                     for(int j = 35; j < 40; j++) { 			//speed
 277:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+11];
 278:Src/main.c    ****                     }
 279:Src/main.c    **** 
 280:Src/main.c    ****                     for(int i = 1; i < 20; i++) {
 281:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 282:Src/main.c    ****                             sdBufferC[i][j] = sdBufferC[0][j];
 283:Src/main.c    ****                         }
 284:Src/main.c    ****                     }
 285:Src/main.c    **** 
 286:Src/main.c    ****                     for(int i = 0; i < 20; i++) {
 287:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 288:Src/main.c    ****                             sdBufferA[i][j] = sdBufferC[i][j];
 289:Src/main.c    ****                             sdBufferB[i][j] = sdBufferC[i][j];
 290:Src/main.c    ****                         }
 291:Src/main.c    ****                     }
 292:Src/main.c    ****                 }
 293:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 294:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 295:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 296:Src/main.c    ****             } else {
 297:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 298:Src/main.c    ****                 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 299:Src/main.c    ****             }
 300:Src/main.c    ****             gpsReady = 1;
 301:Src/main.c    ****             HAL_Delay(5);
 302:Src/main.c    ****             HAL_UART_Receive_DMA(&huart3, (uint8_t *)&rawGps, 51);
 303:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 304:Src/main.c    ****         }
 305:Src/main.c    **** 
 306:Src/main.c    ****         if (mpuReady == 1 && timReady == 1) {
 307:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 308:Src/main.c    ****             if(nBuffer == 1) {
 309:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 310:Src/main.c    ****                 nBuffer = 2;
 311:Src/main.c    ****                 adcReady = 0;
 312:Src/main.c    ****                 mpuReady = 0;
 313:Src/main.c    ****                 gpsReady = 0;
 314:Src/main.c    ****                 timReady = 0;
 315:Src/main.c    ****                 f_write(&MyFile, sdBufferA, sizeof(sdBufferA), (void *)&byteswritten);
 316:Src/main.c    ****                 f_sync(&MyFile);
 317:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 318:Src/main.c    ****             }
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 7


 319:Src/main.c    ****             else if(nBuffer == 2) {
 320:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 321:Src/main.c    ****                 nBuffer = 3;
 322:Src/main.c    ****                 adcReady = 0;
 323:Src/main.c    ****                 mpuReady = 0;
 324:Src/main.c    ****                 gpsReady = 0;
 325:Src/main.c    ****                 timReady = 0;
 326:Src/main.c    ****                 f_write(&MyFile, sdBufferB, sizeof(sdBufferB), (void *)&byteswritten);
 327:Src/main.c    ****                 f_sync(&MyFile);
 328:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 329:Src/main.c    ****             }
 330:Src/main.c    ****             else if(nBuffer == 3) {
 331:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 332:Src/main.c    ****                 nBuffer = 1;
 333:Src/main.c    ****                 adcReady = 0;
 334:Src/main.c    ****                 mpuReady = 0;
 335:Src/main.c    ****                 gpsReady = 0;
 336:Src/main.c    ****                 timReady = 0;
 337:Src/main.c    ****                 f_write(&MyFile, sdBufferC, sizeof(sdBufferC), (void *)&byteswritten);
 338:Src/main.c    ****                 f_sync(&MyFile);
 339:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 340:Src/main.c    ****             }
 341:Src/main.c    ****             // HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 342:Src/main.c    ****             HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_15);
 343:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 344:Src/main.c    ****         }
 345:Src/main.c    **** 
 346:Src/main.c    ****         /* USER CODE END WHILE */
 347:Src/main.c    **** 
 348:Src/main.c    ****         /* USER CODE BEGIN 3 */
 349:Src/main.c    ****     }
 350:Src/main.c    ****     /* USER CODE END 3 */
 351:Src/main.c    **** }
 352:Src/main.c    **** 
 353:Src/main.c    **** /**
 354:Src/main.c    ****   * @brief System Clock Configuration
 355:Src/main.c    ****   * @retval None
 356:Src/main.c    ****   */
 357:Src/main.c    **** void SystemClock_Config(void)
 358:Src/main.c    **** {
  26              		.loc 1 358 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 80
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 95B0     		sub	sp, sp, #84
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 96
 359:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  39              		.loc 1 359 0
  40 0004 0024     		movs	r4, #0
  41 0006 0C94     		str	r4, [sp, #48]
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 8


  42 0008 0D94     		str	r4, [sp, #52]
  43 000a 0F94     		str	r4, [sp, #60]
  44 000c 1094     		str	r4, [sp, #64]
 360:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  45              		.loc 1 360 0
  46 000e 0594     		str	r4, [sp, #20]
  47 0010 0694     		str	r4, [sp, #24]
  48 0012 0794     		str	r4, [sp, #28]
  49 0014 0894     		str	r4, [sp, #32]
  50 0016 0994     		str	r4, [sp, #36]
 361:Src/main.c    ****     RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  51              		.loc 1 361 0
  52 0018 0194     		str	r4, [sp, #4]
  53 001a 0294     		str	r4, [sp, #8]
  54 001c 0394     		str	r4, [sp, #12]
  55 001e 0494     		str	r4, [sp, #16]
 362:Src/main.c    **** 
 363:Src/main.c    ****     /** Initializes the CPU, AHB and APB busses clocks
 364:Src/main.c    ****     */
 365:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  56              		.loc 1 365 0
  57 0020 0122     		movs	r2, #1
  58 0022 0A92     		str	r2, [sp, #40]
 366:Src/main.c    ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  59              		.loc 1 366 0
  60 0024 4FF48033 		mov	r3, #65536
  61 0028 0B93     		str	r3, [sp, #44]
 367:Src/main.c    ****     RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 368:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 368 0
  63 002a 0E92     		str	r2, [sp, #56]
 369:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  64              		.loc 1 369 0
  65 002c 0225     		movs	r5, #2
  66 002e 1195     		str	r5, [sp, #68]
 370:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  67              		.loc 1 370 0
  68 0030 1293     		str	r3, [sp, #72]
 371:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  69              		.loc 1 371 0
  70 0032 4FF4E013 		mov	r3, #1835008
  71 0036 1393     		str	r3, [sp, #76]
 372:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  72              		.loc 1 372 0
  73 0038 0AA8     		add	r0, sp, #40
  74 003a FFF7FEFF 		bl	HAL_RCC_OscConfig
  75              	.LVL0:
 373:Src/main.c    ****     {
 374:Src/main.c    ****         Error_Handler();
 375:Src/main.c    ****     }
 376:Src/main.c    ****     /** Initializes the CPU, AHB and APB busses clocks
 377:Src/main.c    ****     */
 378:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  76              		.loc 1 378 0
  77 003e 0F23     		movs	r3, #15
  78 0040 0593     		str	r3, [sp, #20]
 379:Src/main.c    ****                                   |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 9


 380:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  79              		.loc 1 380 0
  80 0042 0695     		str	r5, [sp, #24]
 381:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  81              		.loc 1 381 0
  82 0044 0794     		str	r4, [sp, #28]
 382:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  83              		.loc 1 382 0
  84 0046 4FF48063 		mov	r3, #1024
  85 004a 0893     		str	r3, [sp, #32]
 383:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  86              		.loc 1 383 0
  87 004c 0994     		str	r4, [sp, #36]
 384:Src/main.c    **** 
 385:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  88              		.loc 1 385 0
  89 004e 2946     		mov	r1, r5
  90 0050 05A8     		add	r0, sp, #20
  91 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  92              	.LVL1:
 386:Src/main.c    ****     {
 387:Src/main.c    ****         Error_Handler();
 388:Src/main.c    ****     }
 389:Src/main.c    ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_USB;
  93              		.loc 1 389 0
  94 0056 1223     		movs	r3, #18
  95 0058 0193     		str	r3, [sp, #4]
 390:Src/main.c    ****     PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
  96              		.loc 1 390 0
  97 005a 4FF40043 		mov	r3, #32768
  98 005e 0393     		str	r3, [sp, #12]
 391:Src/main.c    ****     PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
  99              		.loc 1 391 0
 100 0060 0494     		str	r4, [sp, #16]
 392:Src/main.c    ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 101              		.loc 1 392 0
 102 0062 01A8     		add	r0, sp, #4
 103 0064 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 104              	.LVL2:
 393:Src/main.c    ****     {
 394:Src/main.c    ****         Error_Handler();
 395:Src/main.c    ****     }
 396:Src/main.c    **** }
 105              		.loc 1 396 0
 106 0068 15B0     		add	sp, sp, #84
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 12
 109              		@ sp needed
 110 006a 30BD     		pop	{r4, r5, pc}
 111              		.cfi_endproc
 112              	.LFE67:
 114              		.section	.text.main,"ax",%progbits
 115              		.align	1
 116              		.global	main
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 10


 120              		.fpu softvfp
 122              	main:
 123              	.LFB66:
  95:Src/main.c    ****     /* USER CODE BEGIN 1 */
 124              		.loc 1 95 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 160
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 28
 131              		.cfi_offset 4, -28
 132              		.cfi_offset 5, -24
 133              		.cfi_offset 6, -20
 134              		.cfi_offset 7, -16
 135              		.cfi_offset 8, -12
 136              		.cfi_offset 9, -8
 137              		.cfi_offset 14, -4
 138 0004 ADB0     		sub	sp, sp, #180
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 208
 141              	.LVL3:
 109:Src/main.c    **** 
 142              		.loc 1 109 0
 143 0006 FFF7FEFF 		bl	HAL_Init
 144              	.LVL4:
 116:Src/main.c    **** 
 145              		.loc 1 116 0
 146 000a FFF7FEFF 		bl	SystemClock_Config
 147              	.LVL5:
 123:Src/main.c    ****     MX_DMA_Init();
 148              		.loc 1 123 0
 149 000e FFF7FEFF 		bl	MX_GPIO_Init
 150              	.LVL6:
 124:Src/main.c    ****     MX_TIM3_Init();
 151              		.loc 1 124 0
 152 0012 FFF7FEFF 		bl	MX_DMA_Init
 153              	.LVL7:
 125:Src/main.c    ****     MX_USART1_UART_Init();
 154              		.loc 1 125 0
 155 0016 FFF7FEFF 		bl	MX_TIM3_Init
 156              	.LVL8:
 126:Src/main.c    ****     MX_SPI1_Init();
 157              		.loc 1 126 0
 158 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 159              	.LVL9:
 127:Src/main.c    ****     MX_USART3_UART_Init();
 160              		.loc 1 127 0
 161 001e FFF7FEFF 		bl	MX_SPI1_Init
 162              	.LVL10:
 128:Src/main.c    ****     MX_ADC1_Init();
 163              		.loc 1 128 0
 164 0022 FFF7FEFF 		bl	MX_USART3_UART_Init
 165              	.LVL11:
 129:Src/main.c    ****     MX_I2C1_Init();
 166              		.loc 1 129 0
 167 0026 FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 11


 168              	.LVL12:
 130:Src/main.c    ****     MX_USB_PCD_Init();
 169              		.loc 1 130 0
 170 002a FFF7FEFF 		bl	MX_I2C1_Init
 171              	.LVL13:
 131:Src/main.c    ****     /* USER CODE BEGIN 2 */
 172              		.loc 1 131 0
 173 002e FFF7FEFF 		bl	MX_USB_PCD_Init
 174              	.LVL14:
 133:Src/main.c    ****     HAL_UART_Transmit(&huart1, (uint8_t *)textTxBuffer, strlen(textTxBuffer), 500);
 175              		.loc 1 133 0
 176 0032 BA4D     		ldr	r5, .L83
 177 0034 BA4C     		ldr	r4, .L83+4
 178 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 179 0038 2860     		str	r0, [r5]	@ unaligned
 180 003a 6960     		str	r1, [r5, #4]	@ unaligned
 181 003c AA60     		str	r2, [r5, #8]	@ unaligned
 182 003e EB60     		str	r3, [r5, #12]	@ unaligned
 183 0040 03CC     		ldmia	r4!, {r0, r1}
 184 0042 2861     		str	r0, [r5, #16]	@ unaligned
 185 0044 6961     		str	r1, [r5, #20]	@ unaligned
 134:Src/main.c    **** 
 186              		.loc 1 134 0
 187 0046 2846     		mov	r0, r5
 188 0048 FFF7FEFF 		bl	strlen
 189              	.LVL15:
 190 004c 4FF4FA73 		mov	r3, #500
 191 0050 82B2     		uxth	r2, r0
 192 0052 2946     		mov	r1, r5
 193 0054 B348     		ldr	r0, .L83+8
 194 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 195              	.LVL16:
 136:Src/main.c    ****     while (res == FR_OK) {
 196              		.loc 1 136 0
 197 005a 0022     		movs	r2, #0
 198 005c B249     		ldr	r1, .L83+12
 199 005e B348     		ldr	r0, .L83+16
 200 0060 FFF7FEFF 		bl	f_mount
 201              	.LVL17:
  99:Src/main.c    **** 
 202              		.loc 1 99 0
 203 0064 0024     		movs	r4, #0
 137:Src/main.c    ****         sprintf(fileName, "file%04d.dlf", ++fileNumber);
 204              		.loc 1 137 0
 205 0066 0DE0     		b	.L4
 206              	.LVL18:
 207              	.L5:
 138:Src/main.c    ****         res = f_open(&MyFile, fileName, FA_OPEN_EXISTING | FA_READ);
 208              		.loc 1 138 0
 209 0068 0134     		adds	r4, r4, #1
 210              	.LVL19:
 211 006a A4B2     		uxth	r4, r4
 212              	.LVL20:
 213 006c 2246     		mov	r2, r4
 214 006e B049     		ldr	r1, .L83+20
 215 0070 28A8     		add	r0, sp, #160
 216 0072 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 12


 217              	.LVL21:
 139:Src/main.c    ****     }
 218              		.loc 1 139 0
 219 0076 0122     		movs	r2, #1
 220 0078 28A9     		add	r1, sp, #160
 221 007a AE48     		ldr	r0, .L83+24
 222 007c FFF7FEFF 		bl	f_open
 223              	.LVL22:
 224 0080 AD4B     		ldr	r3, .L83+28
 225 0082 1870     		strb	r0, [r3]
 226              	.LVL23:
 227              	.L4:
 137:Src/main.c    ****         sprintf(fileName, "file%04d.dlf", ++fileNumber);
 228              		.loc 1 137 0
 229 0084 AC4B     		ldr	r3, .L83+28
 230 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231 0088 002B     		cmp	r3, #0
 232 008a EDD0     		beq	.L5
 141:Src/main.c    ****     sprintf(fileHeader, "#V2\r#DATASTART\rDatalog Time; GPS Latitude; GPS Longitude; GPS Speed;Ax;A
 233              		.loc 1 141 0
 234 008c A94C     		ldr	r4, .L83+24
 235              	.LVL24:
 236 008e 1222     		movs	r2, #18
 237 0090 28A9     		add	r1, sp, #160
 238 0092 2046     		mov	r0, r4
 239 0094 FFF7FEFF 		bl	f_open
 240              	.LVL25:
 142:Src/main.c    ****     fileHeader[134] = 0x0A;
 241              		.loc 1 142 0
 242 0098 8725     		movs	r5, #135
 243 009a 2A46     		mov	r2, r5
 244 009c A749     		ldr	r1, .L83+32
 245 009e 06A8     		add	r0, sp, #24
 246 00a0 FFF7FEFF 		bl	memcpy
 247              	.LVL26:
 143:Src/main.c    ****     f_write(&MyFile, fileHeader, sizeof(fileHeader), (void *)&byteswritten);
 248              		.loc 1 143 0
 249 00a4 0A23     		movs	r3, #10
 250 00a6 8DF89E30 		strb	r3, [sp, #158]
 144:Src/main.c    ****     f_sync(&MyFile);
 251              		.loc 1 144 0
 252 00aa A54B     		ldr	r3, .L83+36
 253 00ac 2A46     		mov	r2, r5
 254 00ae 06A9     		add	r1, sp, #24
 255 00b0 2046     		mov	r0, r4
 256 00b2 FFF7FEFF 		bl	f_write
 257              	.LVL27:
 145:Src/main.c    **** 
 258              		.loc 1 145 0
 259 00b6 2046     		mov	r0, r4
 260 00b8 FFF7FEFF 		bl	f_sync
 261              	.LVL28:
 262              	.LBB2:
 148:Src/main.c    ****         for(int j = 0; j < 82; j++) {
 263              		.loc 1 148 0
 264 00bc 0020     		movs	r0, #0
 265 00be 24E0     		b	.L6
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 13


 266              	.LVL29:
 267              	.L7:
 268              	.LBB3:
 150:Src/main.c    ****         }
 269              		.loc 1 150 0 discriminator 3
 270 00c0 A049     		ldr	r1, .L83+40
 271 00c2 5422     		movs	r2, #84
 272 00c4 02FB0012 		mla	r2, r2, r0, r1
 273 00c8 3021     		movs	r1, #48
 274 00ca D154     		strb	r1, [r2, r3]
 149:Src/main.c    ****             sdBufferA[i][j] = 0x30;
 275              		.loc 1 149 0 discriminator 3
 276 00cc 0133     		adds	r3, r3, #1
 277              	.LVL30:
 278              	.L8:
 149:Src/main.c    ****             sdBufferA[i][j] = 0x30;
 279              		.loc 1 149 0 is_stmt 0 discriminator 1
 280 00ce 512B     		cmp	r3, #81
 281 00d0 F6DD     		ble	.L7
 282              	.LBE3:
 152:Src/main.c    ****         sdBufferA[i][22] = 0x41;
 283              		.loc 1 152 0 is_stmt 1 discriminator 2
 284 00d2 9C4A     		ldr	r2, .L83+40
 285 00d4 5423     		movs	r3, #84
 286              	.LVL31:
 287 00d6 03FB0023 		mla	r3, r3, r0, r2
 288 00da 4122     		movs	r2, #65
 289 00dc 9A72     		strb	r2, [r3, #10]
 153:Src/main.c    ****         sdBufferA[i][34] = 0x41;
 290              		.loc 1 153 0 discriminator 2
 291 00de 9A75     		strb	r2, [r3, #22]
 154:Src/main.c    ****         sdBufferA[i][40] = 0x41;
 292              		.loc 1 154 0 discriminator 2
 293 00e0 83F82220 		strb	r2, [r3, #34]
 155:Src/main.c    ****         sdBufferA[i][47] = 0x41;
 294              		.loc 1 155 0 discriminator 2
 295 00e4 83F82820 		strb	r2, [r3, #40]
 156:Src/main.c    ****         sdBufferA[i][54] = 0x41;
 296              		.loc 1 156 0 discriminator 2
 297 00e8 83F82F20 		strb	r2, [r3, #47]
 157:Src/main.c    ****         sdBufferA[i][61] = 0x41;
 298              		.loc 1 157 0 discriminator 2
 299 00ec 83F83620 		strb	r2, [r3, #54]
 158:Src/main.c    ****         sdBufferA[i][68] = 0x41;
 300              		.loc 1 158 0 discriminator 2
 301 00f0 83F83D20 		strb	r2, [r3, #61]
 159:Src/main.c    ****         sdBufferA[i][75] = 0x41;
 302              		.loc 1 159 0 discriminator 2
 303 00f4 83F84420 		strb	r2, [r3, #68]
 160:Src/main.c    ****         sdBufferA[i][82] = 0x0D;
 304              		.loc 1 160 0 discriminator 2
 305 00f8 83F84B20 		strb	r2, [r3, #75]
 161:Src/main.c    ****         sdBufferA[i][83] = 0x0A;
 306              		.loc 1 161 0 discriminator 2
 307 00fc 0D22     		movs	r2, #13
 308 00fe 83F85220 		strb	r2, [r3, #82]
 162:Src/main.c    ****     }
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 14


 309              		.loc 1 162 0 discriminator 2
 310 0102 0A22     		movs	r2, #10
 311 0104 83F85320 		strb	r2, [r3, #83]
 148:Src/main.c    ****         for(int j = 0; j < 82; j++) {
 312              		.loc 1 148 0 discriminator 2
 313 0108 0130     		adds	r0, r0, #1
 314              	.LVL32:
 315              	.L6:
 148:Src/main.c    ****         for(int j = 0; j < 82; j++) {
 316              		.loc 1 148 0 is_stmt 0 discriminator 1
 317 010a 1328     		cmp	r0, #19
 318 010c 01DC     		bgt	.L68
 319              	.LBB4:
 149:Src/main.c    ****             sdBufferA[i][j] = 0x30;
 320              		.loc 1 149 0 is_stmt 1
 321 010e 0023     		movs	r3, #0
 322 0110 DDE7     		b	.L8
 323              	.L68:
 324              	.LBE4:
 325              	.LBE2:
 326              	.LBB5:
 165:Src/main.c    ****         for(int j = 0; j < 84; j++) {
 327              		.loc 1 165 0
 328 0112 0024     		movs	r4, #0
 329 0114 0FE0     		b	.L9
 330              	.LVL33:
 331              	.L10:
 332              	.LBB6:
 167:Src/main.c    ****             sdBufferC[i][j] = sdBufferA[i][j];
 333              		.loc 1 167 0 discriminator 3
 334 0116 5422     		movs	r2, #84
 335 0118 02FB04F2 		mul	r2, r2, r4
 336 011c 8949     		ldr	r1, .L83+40
 337 011e 1144     		add	r1, r1, r2
 338 0120 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 339 0122 8949     		ldr	r1, .L83+44
 340 0124 1144     		add	r1, r1, r2
 341 0126 C854     		strb	r0, [r1, r3]
 168:Src/main.c    ****         }
 342              		.loc 1 168 0 discriminator 3
 343 0128 8849     		ldr	r1, .L83+48
 344 012a 0A44     		add	r2, r2, r1
 345 012c D054     		strb	r0, [r2, r3]
 166:Src/main.c    ****             sdBufferB[i][j] = sdBufferA[i][j];
 346              		.loc 1 166 0 discriminator 3
 347 012e 0133     		adds	r3, r3, #1
 348              	.LVL34:
 349              	.L11:
 166:Src/main.c    ****             sdBufferB[i][j] = sdBufferA[i][j];
 350              		.loc 1 166 0 is_stmt 0 discriminator 1
 351 0130 532B     		cmp	r3, #83
 352 0132 F0DD     		ble	.L10
 353              	.LBE6:
 165:Src/main.c    ****         for(int j = 0; j < 84; j++) {
 354              		.loc 1 165 0 is_stmt 1 discriminator 2
 355 0134 0134     		adds	r4, r4, #1
 356              	.LVL35:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 15


 357              	.L9:
 165:Src/main.c    ****         for(int j = 0; j < 84; j++) {
 358              		.loc 1 165 0 is_stmt 0 discriminator 1
 359 0136 132C     		cmp	r4, #19
 360 0138 01DC     		bgt	.L69
 361              	.LBB7:
 166:Src/main.c    ****             sdBufferB[i][j] = sdBufferA[i][j];
 362              		.loc 1 166 0 is_stmt 1
 363 013a 0023     		movs	r3, #0
 364 013c F8E7     		b	.L11
 365              	.L69:
 366              	.LBE7:
 367              	.LBE5:
 172:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x6B, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
 368              		.loc 1 172 0
 369 013e 0027     		movs	r7, #0
 370 0140 0DF1B008 		add	r8, sp, #176
 371 0144 08F8997D 		strb	r7, [r8, #-153]!
 173:Src/main.c    **** 
 372              		.loc 1 173 0
 373 0148 814D     		ldr	r5, .L83+52
 374 014a 6426     		movs	r6, #100
 375 014c 0296     		str	r6, [sp, #8]
 376 014e 0124     		movs	r4, #1
 377              	.LVL36:
 378 0150 0194     		str	r4, [sp, #4]
 379 0152 CDF80080 		str	r8, [sp]
 380 0156 2346     		mov	r3, r4
 381 0158 6B22     		movs	r2, #107
 382 015a D021     		movs	r1, #208
 383 015c 2846     		mov	r0, r5
 384 015e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 385              	.LVL37:
 175:Src/main.c    ****     // sprintf(txBuffer, "Slave Address: %x \r", mpuConfigRx);
 386              		.loc 1 175 0
 387 0162 0296     		str	r6, [sp, #8]
 388 0164 0194     		str	r4, [sp, #4]
 389 0166 0DF11609 		add	r9, sp, #22
 390 016a CDF80090 		str	r9, [sp]
 391 016e 2346     		mov	r3, r4
 392 0170 7522     		movs	r2, #117
 393 0172 D021     		movs	r1, #208
 394 0174 2846     		mov	r0, r5
 395 0176 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 396              	.LVL38:
 179:Src/main.c    ****     // sprintf(txBuffer, "FIFO config: %x \r", mpuConfigRx);
 397              		.loc 1 179 0
 398 017a 0296     		str	r6, [sp, #8]
 399 017c 0194     		str	r4, [sp, #4]
 400 017e CDF80090 		str	r9, [sp]
 401 0182 2346     		mov	r3, r4
 402 0184 1A22     		movs	r2, #26
 403 0186 D021     		movs	r1, #208
 404 0188 2846     		mov	r0, r5
 405 018a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 406              	.LVL39:
 183:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x1B, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 16


 407              		.loc 1 183 0
 408 018e 0823     		movs	r3, #8
 409 0190 8DF81730 		strb	r3, [sp, #23]
 184:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x1B, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 410              		.loc 1 184 0
 411 0194 0296     		str	r6, [sp, #8]
 412 0196 0194     		str	r4, [sp, #4]
 413 0198 CDF80080 		str	r8, [sp]
 414 019c 2346     		mov	r3, r4
 415 019e 1B22     		movs	r2, #27
 416 01a0 D021     		movs	r1, #208
 417 01a2 2846     		mov	r0, r5
 418 01a4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 419              	.LVL40:
 185:Src/main.c    ****     // sprintf(txBuffer, "Gyr cfig: %x \r", mpuConfigRx);
 420              		.loc 1 185 0
 421 01a8 0296     		str	r6, [sp, #8]
 422 01aa 0194     		str	r4, [sp, #4]
 423 01ac CDF80090 		str	r9, [sp]
 424 01b0 2346     		mov	r3, r4
 425 01b2 1B22     		movs	r2, #27
 426 01b4 D021     		movs	r1, #208
 427 01b6 2846     		mov	r0, r5
 428 01b8 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 429              	.LVL41:
 189:Src/main.c    ****     HAL_I2C_Mem_Write(&hi2c1, 0xD0, 0x1C, I2C_MEMADD_SIZE_8BIT, &mpuConfigTx, 1, 100);
 430              		.loc 1 189 0
 431 01bc 1823     		movs	r3, #24
 432 01be 8DF81730 		strb	r3, [sp, #23]
 190:Src/main.c    ****     HAL_I2C_Mem_Read(&hi2c1, 0xD0, 0x1C, I2C_MEMADD_SIZE_8BIT, &mpuConfigRx, 1, 100);
 433              		.loc 1 190 0
 434 01c2 0296     		str	r6, [sp, #8]
 435 01c4 0194     		str	r4, [sp, #4]
 436 01c6 CDF80080 		str	r8, [sp]
 437 01ca 2346     		mov	r3, r4
 438 01cc 1C22     		movs	r2, #28
 439 01ce D021     		movs	r1, #208
 440 01d0 2846     		mov	r0, r5
 441 01d2 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 442              	.LVL42:
 191:Src/main.c    ****     // sprintf(txBuffer, "Acc cfig: %x \r", mpuConfigRx);
 443              		.loc 1 191 0
 444 01d6 0296     		str	r6, [sp, #8]
 445 01d8 0194     		str	r4, [sp, #4]
 446 01da CDF80090 		str	r9, [sp]
 447 01de 2346     		mov	r3, r4
 448 01e0 1C22     		movs	r2, #28
 449 01e2 D021     		movs	r1, #208
 450 01e4 2846     		mov	r0, r5
 451 01e6 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 452              	.LVL43:
 195:Src/main.c    ****     // HAL_ADCEx_Calibration_Start(&hadc1);
 453              		.loc 1 195 0
 454 01ea 5A48     		ldr	r0, .L83+56
 455 01ec FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 456              	.LVL44:
 198:Src/main.c    **** 
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 17


 457              		.loc 1 198 0
 458 01f0 3322     		movs	r2, #51
 459 01f2 5949     		ldr	r1, .L83+60
 460 01f4 5948     		ldr	r0, .L83+64
 461 01f6 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 462              	.LVL45:
 200:Src/main.c    ****     mpuReady = 0;
 463              		.loc 1 200 0
 464 01fa 594B     		ldr	r3, .L83+68
 465 01fc 1F70     		strb	r7, [r3]
 201:Src/main.c    ****     gpsReady = 0;
 466              		.loc 1 201 0
 467 01fe 594B     		ldr	r3, .L83+72
 468 0200 1F70     		strb	r7, [r3]
 202:Src/main.c    ****     timReady = 0;
 469              		.loc 1 202 0
 470 0202 594B     		ldr	r3, .L83+76
 471 0204 1F70     		strb	r7, [r3]
 203:Src/main.c    ****     nBuffer = 1;
 472              		.loc 1 203 0
 473 0206 594B     		ldr	r3, .L83+80
 474 0208 1F70     		strb	r7, [r3]
 204:Src/main.c    ****     /* USER CODE END 2 */
 475              		.loc 1 204 0
 476 020a 594B     		ldr	r3, .L83+84
 477 020c 1C70     		strb	r4, [r3]
 478 020e 26E1     		b	.L12
 479              	.L77:
 216:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 480              		.loc 1 216 0
 481 0210 4C4B     		ldr	r3, .L83+40
 482 0212 2D22     		movs	r2, #45
 483 0214 DA72     		strb	r2, [r3, #11]
 484              	.LVL46:
 485              	.LBB8:
 217:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+7];
 486              		.loc 1 217 0
 487 0216 0C23     		movs	r3, #12
 488              	.LVL47:
 489              	.L16:
 217:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+7];
 490              		.loc 1 217 0 is_stmt 0 discriminator 1
 491 0218 152B     		cmp	r3, #21
 492 021a 06DC     		bgt	.L70
 218:Src/main.c    ****                     }
 493              		.loc 1 218 0 is_stmt 1 discriminator 3
 494 021c DA1D     		adds	r2, r3, #7
 495 021e 4E49     		ldr	r1, .L83+60
 496 0220 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 497 0222 484A     		ldr	r2, .L83+40
 498 0224 D154     		strb	r1, [r2, r3]
 217:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+7];
 499              		.loc 1 217 0 discriminator 3
 500 0226 0133     		adds	r3, r3, #1
 501              	.LVL48:
 502 0228 F6E7     		b	.L16
 503              	.L70:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 18


 504              	.LBE8:
 220:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 505              		.loc 1 220 0
 506 022a 464B     		ldr	r3, .L83+40
 507              	.LVL49:
 508 022c 2D22     		movs	r2, #45
 509 022e DA75     		strb	r2, [r3, #23]
 510              	.LVL50:
 511              	.LBB9:
 221:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+9];
 512              		.loc 1 221 0
 513 0230 1823     		movs	r3, #24
 514              	.LVL51:
 515              	.L18:
 221:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+9];
 516              		.loc 1 221 0 is_stmt 0 discriminator 1
 517 0232 212B     		cmp	r3, #33
 518 0234 07DC     		bgt	.L71
 222:Src/main.c    ****                     }
 519              		.loc 1 222 0 is_stmt 1 discriminator 3
 520 0236 03F10902 		add	r2, r3, #9
 521 023a 4749     		ldr	r1, .L83+60
 522 023c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 523 023e 414A     		ldr	r2, .L83+40
 524 0240 D154     		strb	r1, [r2, r3]
 221:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+9];
 525              		.loc 1 221 0 discriminator 3
 526 0242 0133     		adds	r3, r3, #1
 527              	.LVL52:
 528 0244 F5E7     		b	.L18
 529              	.L71:
 530              	.LBE9:
 531              	.LBB10:
 224:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+11];
 532              		.loc 1 224 0
 533 0246 2323     		movs	r3, #35
 534              	.LVL53:
 535 0248 06E0     		b	.L20
 536              	.LVL54:
 537              	.L21:
 225:Src/main.c    ****                     }
 538              		.loc 1 225 0 discriminator 3
 539 024a 03F10B02 		add	r2, r3, #11
 540 024e 4249     		ldr	r1, .L83+60
 541 0250 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 542 0252 3C4A     		ldr	r2, .L83+40
 543 0254 D154     		strb	r1, [r2, r3]
 224:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+11];
 544              		.loc 1 224 0 discriminator 3
 545 0256 0133     		adds	r3, r3, #1
 546              	.LVL55:
 547              	.L20:
 224:Src/main.c    ****                         sdBufferA[0][j] = rawGps[j+11];
 548              		.loc 1 224 0 is_stmt 0 discriminator 1
 549 0258 272B     		cmp	r3, #39
 550 025a F6DD     		ble	.L21
 551              	.LBE10:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 19


 552              	.LBB11:
 228:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 553              		.loc 1 228 0 is_stmt 1
 554 025c 0124     		movs	r4, #1
 555 025e 09E0     		b	.L22
 556              	.LVL56:
 557              	.L23:
 558              	.LBB12:
 230:Src/main.c    ****                         }
 559              		.loc 1 230 0 discriminator 3
 560 0260 3849     		ldr	r1, .L83+40
 561 0262 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 562 0264 5422     		movs	r2, #84
 563 0266 02FB0412 		mla	r2, r2, r4, r1
 564 026a D054     		strb	r0, [r2, r3]
 229:Src/main.c    ****                             sdBufferA[i][j] = sdBufferA[0][j];
 565              		.loc 1 229 0 discriminator 3
 566 026c 0133     		adds	r3, r3, #1
 567              	.LVL57:
 568              	.L24:
 229:Src/main.c    ****                             sdBufferA[i][j] = sdBufferA[0][j];
 569              		.loc 1 229 0 is_stmt 0 discriminator 1
 570 026e 282B     		cmp	r3, #40
 571 0270 F6DD     		ble	.L23
 572              	.LBE12:
 228:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 573              		.loc 1 228 0 is_stmt 1 discriminator 2
 574 0272 0134     		adds	r4, r4, #1
 575              	.LVL58:
 576              	.L22:
 228:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 577              		.loc 1 228 0 is_stmt 0 discriminator 1
 578 0274 132C     		cmp	r4, #19
 579 0276 01DC     		bgt	.L72
 580              	.LBB13:
 229:Src/main.c    ****                             sdBufferA[i][j] = sdBufferA[0][j];
 581              		.loc 1 229 0 is_stmt 1
 582 0278 0B23     		movs	r3, #11
 583 027a F8E7     		b	.L24
 584              	.L72:
 585              	.LBE13:
 586              	.LBE11:
 587              	.LBB14:
 234:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 588              		.loc 1 234 0
 589 027c 0024     		movs	r4, #0
 590              	.LVL59:
 591 027e 0FE0     		b	.L25
 592              	.LVL60:
 593              	.L26:
 594              	.LBB15:
 236:Src/main.c    ****                             sdBufferC[i][j] = sdBufferA[i][j];
 595              		.loc 1 236 0 discriminator 3
 596 0280 5422     		movs	r2, #84
 597 0282 02FB04F2 		mul	r2, r2, r4
 598 0286 2F49     		ldr	r1, .L83+40
 599 0288 1144     		add	r1, r1, r2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 20


 600 028a C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 601 028c 2E49     		ldr	r1, .L83+44
 602 028e 1144     		add	r1, r1, r2
 603 0290 C854     		strb	r0, [r1, r3]
 237:Src/main.c    ****                         }
 604              		.loc 1 237 0 discriminator 3
 605 0292 2E49     		ldr	r1, .L83+48
 606 0294 0A44     		add	r2, r2, r1
 607 0296 D054     		strb	r0, [r2, r3]
 235:Src/main.c    ****                             sdBufferB[i][j] = sdBufferA[i][j];
 608              		.loc 1 235 0 discriminator 3
 609 0298 0133     		adds	r3, r3, #1
 610              	.LVL61:
 611              	.L27:
 235:Src/main.c    ****                             sdBufferB[i][j] = sdBufferA[i][j];
 612              		.loc 1 235 0 is_stmt 0 discriminator 1
 613 029a 282B     		cmp	r3, #40
 614 029c F0DD     		ble	.L26
 615              	.LBE15:
 234:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 616              		.loc 1 234 0 is_stmt 1 discriminator 2
 617 029e 0134     		adds	r4, r4, #1
 618              	.LVL62:
 619              	.L25:
 234:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 620              		.loc 1 234 0 is_stmt 0 discriminator 1
 621 02a0 132C     		cmp	r4, #19
 622 02a2 00F3F280 		bgt	.L28
 623              	.LBB16:
 235:Src/main.c    ****                             sdBufferB[i][j] = sdBufferA[i][j];
 624              		.loc 1 235 0 is_stmt 1
 625 02a6 0B23     		movs	r3, #11
 626 02a8 F7E7     		b	.L27
 627              	.LVL63:
 628              	.L78:
 629              	.LBE16:
 630              	.LBE14:
 242:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 631              		.loc 1 242 0
 632 02aa 274B     		ldr	r3, .L83+44
 633 02ac 2D22     		movs	r2, #45
 634 02ae DA72     		strb	r2, [r3, #11]
 635              	.LVL64:
 636              	.LBB17:
 243:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+7];
 637              		.loc 1 243 0
 638 02b0 0C23     		movs	r3, #12
 639 02b2 05E0     		b	.L30
 640              	.LVL65:
 641              	.L31:
 244:Src/main.c    ****                     }
 642              		.loc 1 244 0 discriminator 3
 643 02b4 DA1D     		adds	r2, r3, #7
 644 02b6 2849     		ldr	r1, .L83+60
 645 02b8 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 646 02ba 234A     		ldr	r2, .L83+44
 647 02bc D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 21


 243:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+7];
 648              		.loc 1 243 0 discriminator 3
 649 02be 0133     		adds	r3, r3, #1
 650              	.LVL66:
 651              	.L30:
 243:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+7];
 652              		.loc 1 243 0 is_stmt 0 discriminator 1
 653 02c0 152B     		cmp	r3, #21
 654 02c2 F7DD     		ble	.L31
 655              	.LBE17:
 246:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 656              		.loc 1 246 0 is_stmt 1
 657 02c4 204B     		ldr	r3, .L83+44
 658              	.LVL67:
 659 02c6 2D22     		movs	r2, #45
 660 02c8 DA75     		strb	r2, [r3, #23]
 661              	.LVL68:
 662              	.LBB18:
 247:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+9];
 663              		.loc 1 247 0
 664 02ca 1823     		movs	r3, #24
 665 02cc 06E0     		b	.L32
 666              	.LVL69:
 667              	.L33:
 248:Src/main.c    ****                     }
 668              		.loc 1 248 0 discriminator 3
 669 02ce 03F10902 		add	r2, r3, #9
 670 02d2 2149     		ldr	r1, .L83+60
 671 02d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 672 02d6 1C4A     		ldr	r2, .L83+44
 673 02d8 D154     		strb	r1, [r2, r3]
 247:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+9];
 674              		.loc 1 247 0 discriminator 3
 675 02da 0133     		adds	r3, r3, #1
 676              	.LVL70:
 677              	.L32:
 247:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+9];
 678              		.loc 1 247 0 is_stmt 0 discriminator 1
 679 02dc 212B     		cmp	r3, #33
 680 02de F6DD     		ble	.L33
 681              	.LBE18:
 682              	.LBB19:
 250:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+11];
 683              		.loc 1 250 0 is_stmt 1
 684 02e0 2323     		movs	r3, #35
 685              	.LVL71:
 686 02e2 06E0     		b	.L34
 687              	.LVL72:
 688              	.L35:
 251:Src/main.c    ****                     }
 689              		.loc 1 251 0 discriminator 3
 690 02e4 03F10B02 		add	r2, r3, #11
 691 02e8 1B49     		ldr	r1, .L83+60
 692 02ea 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 693 02ec 164A     		ldr	r2, .L83+44
 694 02ee D154     		strb	r1, [r2, r3]
 250:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+11];
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 22


 695              		.loc 1 250 0 discriminator 3
 696 02f0 0133     		adds	r3, r3, #1
 697              	.LVL73:
 698              	.L34:
 250:Src/main.c    ****                         sdBufferB[0][j] = rawGps[j+11];
 699              		.loc 1 250 0 is_stmt 0 discriminator 1
 700 02f2 272B     		cmp	r3, #39
 701 02f4 F6DD     		ble	.L35
 702              	.LBE19:
 703              	.LBB20:
 254:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 704              		.loc 1 254 0 is_stmt 1
 705 02f6 0124     		movs	r4, #1
 706 02f8 00E0     		b	.L36
 707              	.LVL74:
 708              	.L74:
 254:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 709              		.loc 1 254 0 is_stmt 0 discriminator 2
 710 02fa 0134     		adds	r4, r4, #1
 711              	.LVL75:
 712              	.L36:
 254:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 713              		.loc 1 254 0 discriminator 1
 714 02fc 132C     		cmp	r4, #19
 715 02fe 0ADC     		bgt	.L73
 716              	.LBB21:
 255:Src/main.c    ****                             sdBufferB[i][j] = sdBufferB[0][j];
 717              		.loc 1 255 0 is_stmt 1
 718 0300 0B23     		movs	r3, #11
 719              	.L38:
 720              	.LVL76:
 255:Src/main.c    ****                             sdBufferB[i][j] = sdBufferB[0][j];
 721              		.loc 1 255 0 is_stmt 0 discriminator 1
 722 0302 282B     		cmp	r3, #40
 723 0304 F9DC     		bgt	.L74
 256:Src/main.c    ****                         }
 724              		.loc 1 256 0 is_stmt 1 discriminator 3
 725 0306 1049     		ldr	r1, .L83+44
 726 0308 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 727 030a 5422     		movs	r2, #84
 728 030c 02FB0412 		mla	r2, r2, r4, r1
 729 0310 D054     		strb	r0, [r2, r3]
 255:Src/main.c    ****                             sdBufferB[i][j] = sdBufferB[0][j];
 730              		.loc 1 255 0 discriminator 3
 731 0312 0133     		adds	r3, r3, #1
 732              	.LVL77:
 733 0314 F5E7     		b	.L38
 734              	.LVL78:
 735              	.L73:
 736              	.LBE21:
 737              	.LBE20:
 738              	.LBB22:
 260:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 739              		.loc 1 260 0
 740 0316 0024     		movs	r4, #0
 741              	.LVL79:
 742 0318 3CE0     		b	.L39
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 23


 743              	.L84:
 744 031a 00BF     		.align	2
 745              	.L83:
 746 031c 00000000 		.word	textTxBuffer
 747 0320 00000000 		.word	.LC0
 748 0324 00000000 		.word	huart1
 749 0328 00000000 		.word	SDPath
 750 032c 00000000 		.word	SDFatFs
 751 0330 18000000 		.word	.LC1
 752 0334 00000000 		.word	MyFile
 753 0338 00000000 		.word	res
 754 033c 28000000 		.word	.LC2
 755 0340 00000000 		.word	byteswritten
 756 0344 00000000 		.word	sdBufferA
 757 0348 00000000 		.word	sdBufferB
 758 034c 00000000 		.word	sdBufferC
 759 0350 00000000 		.word	hi2c1
 760 0354 00000000 		.word	htim3
 761 0358 00000000 		.word	rawGps
 762 035c 00000000 		.word	huart3
 763 0360 00000000 		.word	adcReady
 764 0364 00000000 		.word	mpuReady
 765 0368 00000000 		.word	gpsReady
 766 036c 00000000 		.word	timReady
 767 0370 00000000 		.word	nBuffer
 768              	.LVL80:
 769              	.L40:
 770              	.LBB23:
 262:Src/main.c    ****                             sdBufferC[i][j] = sdBufferB[i][j];
 771              		.loc 1 262 0 discriminator 3
 772 0374 5422     		movs	r2, #84
 773 0376 02FB04F2 		mul	r2, r2, r4
 774 037a 7449     		ldr	r1, .L85
 775 037c 1144     		add	r1, r1, r2
 776 037e C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 777 0380 7349     		ldr	r1, .L85+4
 778 0382 1144     		add	r1, r1, r2
 779 0384 C854     		strb	r0, [r1, r3]
 263:Src/main.c    ****                         }
 780              		.loc 1 263 0 discriminator 3
 781 0386 7349     		ldr	r1, .L85+8
 782 0388 0A44     		add	r2, r2, r1
 783 038a D054     		strb	r0, [r2, r3]
 261:Src/main.c    ****                             sdBufferA[i][j] = sdBufferB[i][j];
 784              		.loc 1 261 0 discriminator 3
 785 038c 0133     		adds	r3, r3, #1
 786              	.LVL81:
 787              	.L41:
 261:Src/main.c    ****                             sdBufferA[i][j] = sdBufferB[i][j];
 788              		.loc 1 261 0 is_stmt 0 discriminator 1
 789 038e 282B     		cmp	r3, #40
 790 0390 F0DD     		ble	.L40
 791              	.LBE23:
 260:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 792              		.loc 1 260 0 is_stmt 1 discriminator 2
 793 0392 0134     		adds	r4, r4, #1
 794              	.LVL82:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 24


 795              	.L39:
 260:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 796              		.loc 1 260 0 is_stmt 0 discriminator 1
 797 0394 132C     		cmp	r4, #19
 798 0396 78DC     		bgt	.L28
 799              	.LBB24:
 261:Src/main.c    ****                             sdBufferA[i][j] = sdBufferB[i][j];
 800              		.loc 1 261 0 is_stmt 1
 801 0398 0B23     		movs	r3, #11
 802 039a F8E7     		b	.L41
 803              	.LVL83:
 804              	.L79:
 805              	.LBE24:
 806              	.LBE22:
 268:Src/main.c    ****                     for(int j = 12; j < 22; j++) { 			//latitude
 807              		.loc 1 268 0
 808 039c 6D4B     		ldr	r3, .L85+8
 809 039e 2D22     		movs	r2, #45
 810 03a0 DA72     		strb	r2, [r3, #11]
 811              	.LVL84:
 812              	.LBB25:
 269:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+7];
 813              		.loc 1 269 0
 814 03a2 0C23     		movs	r3, #12
 815 03a4 05E0     		b	.L42
 816              	.LVL85:
 817              	.L43:
 270:Src/main.c    ****                     }
 818              		.loc 1 270 0 discriminator 3
 819 03a6 DA1D     		adds	r2, r3, #7
 820 03a8 6B49     		ldr	r1, .L85+12
 821 03aa 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 822 03ac 694A     		ldr	r2, .L85+8
 823 03ae D154     		strb	r1, [r2, r3]
 269:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+7];
 824              		.loc 1 269 0 discriminator 3
 825 03b0 0133     		adds	r3, r3, #1
 826              	.LVL86:
 827              	.L42:
 269:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+7];
 828              		.loc 1 269 0 is_stmt 0 discriminator 1
 829 03b2 152B     		cmp	r3, #21
 830 03b4 F7DD     		ble	.L43
 831              	.LBE25:
 272:Src/main.c    ****                     for(int j = 24; j < 34; j++) { 			//longitude
 832              		.loc 1 272 0 is_stmt 1
 833 03b6 674B     		ldr	r3, .L85+8
 834              	.LVL87:
 835 03b8 2D22     		movs	r2, #45
 836 03ba DA75     		strb	r2, [r3, #23]
 837              	.LVL88:
 838              	.LBB26:
 273:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+9];
 839              		.loc 1 273 0
 840 03bc 1823     		movs	r3, #24
 841 03be 06E0     		b	.L44
 842              	.LVL89:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 25


 843              	.L45:
 274:Src/main.c    ****                     }
 844              		.loc 1 274 0 discriminator 3
 845 03c0 03F10902 		add	r2, r3, #9
 846 03c4 6449     		ldr	r1, .L85+12
 847 03c6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 848 03c8 624A     		ldr	r2, .L85+8
 849 03ca D154     		strb	r1, [r2, r3]
 273:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+9];
 850              		.loc 1 273 0 discriminator 3
 851 03cc 0133     		adds	r3, r3, #1
 852              	.LVL90:
 853              	.L44:
 273:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+9];
 854              		.loc 1 273 0 is_stmt 0 discriminator 1
 855 03ce 212B     		cmp	r3, #33
 856 03d0 F6DD     		ble	.L45
 857              	.LBE26:
 858              	.LBB27:
 276:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+11];
 859              		.loc 1 276 0 is_stmt 1
 860 03d2 2323     		movs	r3, #35
 861              	.LVL91:
 862 03d4 06E0     		b	.L46
 863              	.LVL92:
 864              	.L47:
 277:Src/main.c    ****                     }
 865              		.loc 1 277 0 discriminator 3
 866 03d6 03F10B02 		add	r2, r3, #11
 867 03da 5F49     		ldr	r1, .L85+12
 868 03dc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 869 03de 5D4A     		ldr	r2, .L85+8
 870 03e0 D154     		strb	r1, [r2, r3]
 276:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+11];
 871              		.loc 1 276 0 discriminator 3
 872 03e2 0133     		adds	r3, r3, #1
 873              	.LVL93:
 874              	.L46:
 276:Src/main.c    ****                         sdBufferC[0][j] = rawGps[j+11];
 875              		.loc 1 276 0 is_stmt 0 discriminator 1
 876 03e4 272B     		cmp	r3, #39
 877 03e6 F6DD     		ble	.L47
 878              	.LBE27:
 879              	.LBB28:
 280:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 880              		.loc 1 280 0 is_stmt 1
 881 03e8 0124     		movs	r4, #1
 882 03ea 09E0     		b	.L48
 883              	.LVL94:
 884              	.L49:
 885              	.LBB29:
 282:Src/main.c    ****                         }
 886              		.loc 1 282 0 discriminator 3
 887 03ec 5949     		ldr	r1, .L85+8
 888 03ee C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 889 03f0 5422     		movs	r2, #84
 890 03f2 02FB0412 		mla	r2, r2, r4, r1
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 26


 891 03f6 D054     		strb	r0, [r2, r3]
 281:Src/main.c    ****                             sdBufferC[i][j] = sdBufferC[0][j];
 892              		.loc 1 281 0 discriminator 3
 893 03f8 0133     		adds	r3, r3, #1
 894              	.LVL95:
 895              	.L50:
 281:Src/main.c    ****                             sdBufferC[i][j] = sdBufferC[0][j];
 896              		.loc 1 281 0 is_stmt 0 discriminator 1
 897 03fa 282B     		cmp	r3, #40
 898 03fc F6DD     		ble	.L49
 899              	.LBE29:
 280:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 900              		.loc 1 280 0 is_stmt 1 discriminator 2
 901 03fe 0134     		adds	r4, r4, #1
 902              	.LVL96:
 903              	.L48:
 280:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 904              		.loc 1 280 0 is_stmt 0 discriminator 1
 905 0400 132C     		cmp	r4, #19
 906 0402 01DC     		bgt	.L75
 907              	.LBB30:
 281:Src/main.c    ****                             sdBufferC[i][j] = sdBufferC[0][j];
 908              		.loc 1 281 0 is_stmt 1
 909 0404 0B23     		movs	r3, #11
 910 0406 F8E7     		b	.L50
 911              	.L75:
 912              	.LBE30:
 913              	.LBE28:
 914              	.LBB31:
 286:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 915              		.loc 1 286 0
 916 0408 0024     		movs	r4, #0
 917              	.LVL97:
 918 040a 0FE0     		b	.L51
 919              	.LVL98:
 920              	.L52:
 921              	.LBB32:
 288:Src/main.c    ****                             sdBufferB[i][j] = sdBufferC[i][j];
 922              		.loc 1 288 0 discriminator 3
 923 040c 5422     		movs	r2, #84
 924 040e 02FB04F2 		mul	r2, r2, r4
 925 0412 5049     		ldr	r1, .L85+8
 926 0414 1144     		add	r1, r1, r2
 927 0416 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 928 0418 4D49     		ldr	r1, .L85+4
 929 041a 1144     		add	r1, r1, r2
 930 041c C854     		strb	r0, [r1, r3]
 289:Src/main.c    ****                         }
 931              		.loc 1 289 0 discriminator 3
 932 041e 4B49     		ldr	r1, .L85
 933 0420 0A44     		add	r2, r2, r1
 934 0422 D054     		strb	r0, [r2, r3]
 287:Src/main.c    ****                             sdBufferA[i][j] = sdBufferC[i][j];
 935              		.loc 1 287 0 discriminator 3
 936 0424 0133     		adds	r3, r3, #1
 937              	.LVL99:
 938              	.L53:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 27


 287:Src/main.c    ****                             sdBufferA[i][j] = sdBufferC[i][j];
 939              		.loc 1 287 0 is_stmt 0 discriminator 1
 940 0426 282B     		cmp	r3, #40
 941 0428 F0DD     		ble	.L52
 942              	.LBE32:
 286:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 943              		.loc 1 286 0 is_stmt 1 discriminator 2
 944 042a 0134     		adds	r4, r4, #1
 945              	.LVL100:
 946              	.L51:
 286:Src/main.c    ****                         for(int j = 11; j < 41; j++) {
 947              		.loc 1 286 0 is_stmt 0 discriminator 1
 948 042c 132C     		cmp	r4, #19
 949 042e 2CDC     		bgt	.L28
 950              	.LBB33:
 287:Src/main.c    ****                             sdBufferA[i][j] = sdBufferC[i][j];
 951              		.loc 1 287 0 is_stmt 1
 952 0430 0B23     		movs	r3, #11
 953 0432 F8E7     		b	.L53
 954              	.LVL101:
 955              	.L14:
 956              	.LBE33:
 957              	.LBE31:
 298:Src/main.c    ****             }
 958              		.loc 1 298 0
 959 0434 0022     		movs	r2, #0
 960 0436 4FF48071 		mov	r1, #256
 961 043a 4848     		ldr	r0, .L85+16
 962 043c FFF7FEFF 		bl	HAL_GPIO_WritePin
 963              	.LVL102:
 964              	.L54:
 300:Src/main.c    ****             HAL_Delay(5);
 965              		.loc 1 300 0
 966 0440 474B     		ldr	r3, .L85+20
 967 0442 0122     		movs	r2, #1
 968 0444 1A70     		strb	r2, [r3]
 301:Src/main.c    ****             HAL_UART_Receive_DMA(&huart3, (uint8_t *)&rawGps, 51);
 969              		.loc 1 301 0
 970 0446 0520     		movs	r0, #5
 971 0448 FFF7FEFF 		bl	HAL_Delay
 972              	.LVL103:
 302:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_RESET);
 973              		.loc 1 302 0
 974 044c 3322     		movs	r2, #51
 975 044e 4249     		ldr	r1, .L85+12
 976 0450 4448     		ldr	r0, .L85+24
 977 0452 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 978              	.LVL104:
 979              	.L13:
 306:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 980              		.loc 1 306 0
 981 0456 444B     		ldr	r3, .L85+28
 982 0458 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 983 045a 012B     		cmp	r3, #1
 984 045c 1CD0     		beq	.L76
 985              	.L12:
 211:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, GPIO_PIN_SET);
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 28


 986              		.loc 1 211 0
 987 045e 404B     		ldr	r3, .L85+20
 988 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 989 0462 002B     		cmp	r3, #0
 990 0464 F7D1     		bne	.L13
 213:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 991              		.loc 1 213 0
 992 0466 3C4B     		ldr	r3, .L85+12
 993 0468 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 994 046a 472B     		cmp	r3, #71
 995 046c E2D1     		bne	.L14
 213:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_SET);
 996              		.loc 1 213 0 is_stmt 0 discriminator 1
 997 046e 3A4B     		ldr	r3, .L85+12
 998 0470 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 999 0472 412B     		cmp	r3, #65
 1000 0474 DED1     		bne	.L14
 215:Src/main.c    ****                     sdBufferA[0][11] = 0x2D;				//-
 1001              		.loc 1 215 0 is_stmt 1
 1002 0476 3D4B     		ldr	r3, .L85+32
 1003 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1004 047a 012B     		cmp	r3, #1
 1005 047c 3FF4C8AE 		beq	.L77
 241:Src/main.c    ****                     sdBufferB[0][11] = 0x2D;				//-
 1006              		.loc 1 241 0
 1007 0480 022B     		cmp	r3, #2
 1008 0482 3FF412AF 		beq	.L78
 267:Src/main.c    ****                     sdBufferC[0][11] = 0x2D;				//-
 1009              		.loc 1 267 0
 1010 0486 032B     		cmp	r3, #3
 1011 0488 88D0     		beq	.L79
 1012              	.L28:
 294:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, GPIO_PIN_RESET);
 1013              		.loc 1 294 0
 1014 048a 0122     		movs	r2, #1
 1015 048c 4FF48071 		mov	r1, #256
 1016 0490 3248     		ldr	r0, .L85+16
 1017 0492 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1018              	.LVL105:
 1019 0496 D3E7     		b	.L54
 1020              	.L76:
 306:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 1021              		.loc 1 306 0 discriminator 1
 1022 0498 354B     		ldr	r3, .L85+36
 1023 049a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 049c 012B     		cmp	r3, #1
 1025 049e DED1     		bne	.L12
 308:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1026              		.loc 1 308 0
 1027 04a0 324B     		ldr	r3, .L85+32
 1028 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1029 04a4 012B     		cmp	r3, #1
 1030 04a6 09D0     		beq	.L80
 319:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1031              		.loc 1 319 0
 1032 04a8 022B     		cmp	r3, #2
 1033 04aa 1FD0     		beq	.L81
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 29


 330:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1034              		.loc 1 330 0
 1035 04ac 032B     		cmp	r3, #3
 1036 04ae 35D0     		beq	.L82
 1037              	.L57:
 342:Src/main.c    ****             // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1038              		.loc 1 342 0
 1039 04b0 4FF40041 		mov	r1, #32768
 1040 04b4 2F48     		ldr	r0, .L85+40
 1041 04b6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1042              	.LVL106:
 1043 04ba D0E7     		b	.L12
 1044              	.L80:
 310:Src/main.c    ****                 adcReady = 0;
 1045              		.loc 1 310 0
 1046 04bc 2B4B     		ldr	r3, .L85+32
 1047 04be 0222     		movs	r2, #2
 1048 04c0 1A70     		strb	r2, [r3]
 311:Src/main.c    ****                 mpuReady = 0;
 1049              		.loc 1 311 0
 1050 04c2 0023     		movs	r3, #0
 1051 04c4 2C4A     		ldr	r2, .L85+44
 1052 04c6 1370     		strb	r3, [r2]
 312:Src/main.c    ****                 gpsReady = 0;
 1053              		.loc 1 312 0
 1054 04c8 274A     		ldr	r2, .L85+28
 1055 04ca 1370     		strb	r3, [r2]
 313:Src/main.c    ****                 timReady = 0;
 1056              		.loc 1 313 0
 1057 04cc 244A     		ldr	r2, .L85+20
 1058 04ce 1370     		strb	r3, [r2]
 314:Src/main.c    ****                 f_write(&MyFile, sdBufferA, sizeof(sdBufferA), (void *)&byteswritten);
 1059              		.loc 1 314 0
 1060 04d0 274A     		ldr	r2, .L85+36
 1061 04d2 1370     		strb	r3, [r2]
 315:Src/main.c    ****                 f_sync(&MyFile);
 1062              		.loc 1 315 0
 1063 04d4 294C     		ldr	r4, .L85+48
 1064 04d6 2A4B     		ldr	r3, .L85+52
 1065 04d8 4FF4D262 		mov	r2, #1680
 1066 04dc 1C49     		ldr	r1, .L85+4
 1067 04de 2046     		mov	r0, r4
 1068 04e0 FFF7FEFF 		bl	f_write
 1069              	.LVL107:
 316:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 1070              		.loc 1 316 0
 1071 04e4 2046     		mov	r0, r4
 1072 04e6 FFF7FEFF 		bl	f_sync
 1073              	.LVL108:
 1074 04ea E1E7     		b	.L57
 1075              	.L81:
 321:Src/main.c    ****                 adcReady = 0;
 1076              		.loc 1 321 0
 1077 04ec 1F4B     		ldr	r3, .L85+32
 1078 04ee 0322     		movs	r2, #3
 1079 04f0 1A70     		strb	r2, [r3]
 322:Src/main.c    ****                 mpuReady = 0;
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 30


 1080              		.loc 1 322 0
 1081 04f2 0023     		movs	r3, #0
 1082 04f4 204A     		ldr	r2, .L85+44
 1083 04f6 1370     		strb	r3, [r2]
 323:Src/main.c    ****                 gpsReady = 0;
 1084              		.loc 1 323 0
 1085 04f8 1B4A     		ldr	r2, .L85+28
 1086 04fa 1370     		strb	r3, [r2]
 324:Src/main.c    ****                 timReady = 0;
 1087              		.loc 1 324 0
 1088 04fc 184A     		ldr	r2, .L85+20
 1089 04fe 1370     		strb	r3, [r2]
 325:Src/main.c    ****                 f_write(&MyFile, sdBufferB, sizeof(sdBufferB), (void *)&byteswritten);
 1090              		.loc 1 325 0
 1091 0500 1B4A     		ldr	r2, .L85+36
 1092 0502 1370     		strb	r3, [r2]
 326:Src/main.c    ****                 f_sync(&MyFile);
 1093              		.loc 1 326 0
 1094 0504 1D4C     		ldr	r4, .L85+48
 1095 0506 1E4B     		ldr	r3, .L85+52
 1096 0508 4FF4D262 		mov	r2, #1680
 1097 050c 0F49     		ldr	r1, .L85
 1098 050e 2046     		mov	r0, r4
 1099 0510 FFF7FEFF 		bl	f_write
 1100              	.LVL109:
 327:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 1101              		.loc 1 327 0
 1102 0514 2046     		mov	r0, r4
 1103 0516 FFF7FEFF 		bl	f_sync
 1104              	.LVL110:
 1105 051a C9E7     		b	.L57
 1106              	.L82:
 332:Src/main.c    ****                 adcReady = 0;
 1107              		.loc 1 332 0
 1108 051c 134B     		ldr	r3, .L85+32
 1109 051e 0122     		movs	r2, #1
 1110 0520 1A70     		strb	r2, [r3]
 333:Src/main.c    ****                 mpuReady = 0;
 1111              		.loc 1 333 0
 1112 0522 0023     		movs	r3, #0
 1113 0524 144A     		ldr	r2, .L85+44
 1114 0526 1370     		strb	r3, [r2]
 334:Src/main.c    ****                 gpsReady = 0;
 1115              		.loc 1 334 0
 1116 0528 0F4A     		ldr	r2, .L85+28
 1117 052a 1370     		strb	r3, [r2]
 335:Src/main.c    ****                 timReady = 0;
 1118              		.loc 1 335 0
 1119 052c 0C4A     		ldr	r2, .L85+20
 1120 052e 1370     		strb	r3, [r2]
 336:Src/main.c    ****                 f_write(&MyFile, sdBufferC, sizeof(sdBufferC), (void *)&byteswritten);
 1121              		.loc 1 336 0
 1122 0530 0F4A     		ldr	r2, .L85+36
 1123 0532 1370     		strb	r3, [r2]
 337:Src/main.c    ****                 f_sync(&MyFile);
 1124              		.loc 1 337 0
 1125 0534 114C     		ldr	r4, .L85+48
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 31


 1126 0536 124B     		ldr	r3, .L85+52
 1127 0538 4FF4D262 		mov	r2, #1680
 1128 053c 0549     		ldr	r1, .L85+8
 1129 053e 2046     		mov	r0, r4
 1130 0540 FFF7FEFF 		bl	f_write
 1131              	.LVL111:
 338:Src/main.c    ****                 // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 1132              		.loc 1 338 0
 1133 0544 2046     		mov	r0, r4
 1134 0546 FFF7FEFF 		bl	f_sync
 1135              	.LVL112:
 1136 054a B1E7     		b	.L57
 1137              	.L86:
 1138              		.align	2
 1139              	.L85:
 1140 054c 00000000 		.word	sdBufferB
 1141 0550 00000000 		.word	sdBufferA
 1142 0554 00000000 		.word	sdBufferC
 1143 0558 00000000 		.word	rawGps
 1144 055c 00080140 		.word	1073809408
 1145 0560 00000000 		.word	gpsReady
 1146 0564 00000000 		.word	huart3
 1147 0568 00000000 		.word	mpuReady
 1148 056c 00000000 		.word	nBuffer
 1149 0570 00000000 		.word	timReady
 1150 0574 000C0140 		.word	1073810432
 1151 0578 00000000 		.word	adcReady
 1152 057c 00000000 		.word	MyFile
 1153 0580 00000000 		.word	byteswritten
 1154              		.cfi_endproc
 1155              	.LFE66:
 1157              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1158              		.align	1
 1159              		.global	HAL_TIM_PeriodElapsedCallback
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu softvfp
 1165              	HAL_TIM_PeriodElapsedCallback:
 1166              	.LFB68:
 397:Src/main.c    **** 
 398:Src/main.c    **** /* USER CODE BEGIN 4 */
 399:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 400:Src/main.c    **** {
 1167              		.loc 1 400 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL113:
 1172 0000 10B5     		push	{r4, lr}
 1173              	.LCFI5:
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 4, -8
 1176              		.cfi_offset 14, -4
 1177 0002 82B0     		sub	sp, sp, #8
 1178              	.LCFI6:
 1179              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 32


 401:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 402:Src/main.c    ****     HAL_I2C_Mem_Read_IT(&hi2c1, 0xD0, 0x3B, I2C_MEMADD_SIZE_8BIT, rawMpu, 14);
 1180              		.loc 1 402 0
 1181 0004 0E23     		movs	r3, #14
 1182 0006 0193     		str	r3, [sp, #4]
 1183 0008 324B     		ldr	r3, .L109
 1184 000a 0093     		str	r3, [sp]
 1185 000c 0123     		movs	r3, #1
 1186 000e 3B22     		movs	r2, #59
 1187 0010 D021     		movs	r1, #208
 1188 0012 3148     		ldr	r0, .L109+4
 1189              	.LVL114:
 1190 0014 FFF7FEFF 		bl	HAL_I2C_Mem_Read_IT
 1191              	.LVL115:
 403:Src/main.c    **** 
 404:Src/main.c    ****     static uint32_t seconds, millis;
 405:Src/main.c    **** 
 406:Src/main.c    ****     millis = millis + 5;
 1192              		.loc 1 406 0
 1193 0018 304A     		ldr	r2, .L109+8
 1194 001a 1368     		ldr	r3, [r2]
 1195 001c 0533     		adds	r3, r3, #5
 1196 001e 1360     		str	r3, [r2]
 407:Src/main.c    ****     // timeAux++;
 408:Src/main.c    ****     // if(timeAux == 2950) {
 409:Src/main.c    ****     //     millis = millis-2;
 410:Src/main.c    ****     //     timeAux =0;
 411:Src/main.c    ****     // }
 412:Src/main.c    ****     if(millis == 1000) {
 1197              		.loc 1 412 0
 1198 0020 B3F57A7F 		cmp	r3, #1000
 1199 0024 14D0     		beq	.L105
 1200              	.L88:
 413:Src/main.c    ****         millis =0;
 414:Src/main.c    ****         seconds++;
 415:Src/main.c    ****     }
 416:Src/main.c    **** 
 417:Src/main.c    ****     sprintf(timeBuffer,"%06d.%03dA", seconds, millis);
 1201              		.loc 1 417 0
 1202 0026 2D4B     		ldr	r3, .L109+8
 1203 0028 1B68     		ldr	r3, [r3]
 1204 002a 2D4A     		ldr	r2, .L109+12
 1205 002c 1268     		ldr	r2, [r2]
 1206 002e 2D49     		ldr	r1, .L109+16
 1207 0030 2D48     		ldr	r0, .L109+20
 1208 0032 FFF7FEFF 		bl	sprintf
 1209              	.LVL116:
 418:Src/main.c    **** 
 419:Src/main.c    ****     static uint8_t iTim = 0;
 420:Src/main.c    **** 
 421:Src/main.c    ****     if(timReady ==0) {
 1210              		.loc 1 421 0
 1211 0036 2D4B     		ldr	r3, .L109+24
 1212 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 003a 23BB     		cbnz	r3, .L87
 422:Src/main.c    ****         if(nBuffer ==1) {
 1214              		.loc 1 422 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 33


 1215 003c 2C4B     		ldr	r3, .L109+28
 1216 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1217 0040 012B     		cmp	r3, #1
 1218 0042 22D0     		beq	.L106
 423:Src/main.c    ****             for (int i = 0; i < 11; i++) {
 424:Src/main.c    ****                 sdBufferA[iTim][i] = timeBuffer[i];
 425:Src/main.c    ****             }
 426:Src/main.c    ****         } else if(nBuffer ==2) {
 1219              		.loc 1 426 0
 1220 0044 022B     		cmp	r3, #2
 1221 0046 2FD0     		beq	.L107
 427:Src/main.c    ****             for (int i = 0; i < 11; i++) {
 428:Src/main.c    ****                 sdBufferB[iTim][i] = timeBuffer[i];
 429:Src/main.c    ****             }
 430:Src/main.c    ****         }
 431:Src/main.c    ****         else if(nBuffer ==3) {
 1222              		.loc 1 431 0
 1223 0048 032B     		cmp	r3, #3
 1224 004a 15D1     		bne	.L93
 1225              	.LBB34:
 432:Src/main.c    ****             for (int i = 0; i < 11; i++) {
 1226              		.loc 1 432 0
 1227 004c 0023     		movs	r3, #0
 1228 004e 37E0     		b	.L97
 1229              	.L105:
 1230              	.LBE34:
 413:Src/main.c    ****         seconds++;
 1231              		.loc 1 413 0
 1232 0050 1346     		mov	r3, r2
 1233 0052 0022     		movs	r2, #0
 1234 0054 1A60     		str	r2, [r3]
 414:Src/main.c    ****     }
 1235              		.loc 1 414 0
 1236 0056 224A     		ldr	r2, .L109+12
 1237 0058 1368     		ldr	r3, [r2]
 1238 005a 0133     		adds	r3, r3, #1
 1239 005c 1360     		str	r3, [r2]
 1240 005e E2E7     		b	.L88
 1241              	.LVL117:
 1242              	.L92:
 1243              	.LBB35:
 424:Src/main.c    ****             }
 1244              		.loc 1 424 0 discriminator 3
 1245 0060 244A     		ldr	r2, .L109+32
 1246 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1247 0064 2049     		ldr	r1, .L109+20
 1248 0066 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1249 0068 2348     		ldr	r0, .L109+36
 1250 006a 5424     		movs	r4, #84
 1251 006c 04FB0202 		mla	r2, r4, r2, r0
 1252 0070 D154     		strb	r1, [r2, r3]
 423:Src/main.c    ****                 sdBufferA[iTim][i] = timeBuffer[i];
 1253              		.loc 1 423 0 discriminator 3
 1254 0072 0133     		adds	r3, r3, #1
 1255              	.LVL118:
 1256              	.L90:
 423:Src/main.c    ****                 sdBufferA[iTim][i] = timeBuffer[i];
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 34


 1257              		.loc 1 423 0 is_stmt 0 discriminator 1
 1258 0074 0A2B     		cmp	r3, #10
 1259 0076 F3DD     		ble	.L92
 1260              	.LVL119:
 1261              	.L93:
 1262              	.LBE35:
 433:Src/main.c    ****                 sdBufferC[iTim][i] = timeBuffer[i];
 434:Src/main.c    ****             }
 435:Src/main.c    ****         }
 436:Src/main.c    **** 
 437:Src/main.c    ****         iTim++;
 1263              		.loc 1 437 0 is_stmt 1
 1264 0078 1E4A     		ldr	r2, .L109+32
 1265 007a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1266 007c 0133     		adds	r3, r3, #1
 1267 007e DBB2     		uxtb	r3, r3
 1268 0080 1370     		strb	r3, [r2]
 438:Src/main.c    ****         if (iTim == 20) {
 1269              		.loc 1 438 0
 1270 0082 142B     		cmp	r3, #20
 1271 0084 1FD0     		beq	.L108
 1272              	.L87:
 439:Src/main.c    ****             timReady = 1;
 440:Src/main.c    ****             iTim = 0;
 441:Src/main.c    ****         }
 442:Src/main.c    ****     }
 443:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 444:Src/main.c    **** }
 1273              		.loc 1 444 0
 1274 0086 02B0     		add	sp, sp, #8
 1275              	.LCFI7:
 1276              		.cfi_remember_state
 1277              		.cfi_def_cfa_offset 8
 1278              		@ sp needed
 1279 0088 10BD     		pop	{r4, pc}
 1280              	.L106:
 1281              	.LCFI8:
 1282              		.cfi_restore_state
 1283              	.LBB36:
 423:Src/main.c    ****                 sdBufferA[iTim][i] = timeBuffer[i];
 1284              		.loc 1 423 0
 1285 008a 0023     		movs	r3, #0
 1286 008c F2E7     		b	.L90
 1287              	.LVL120:
 1288              	.L96:
 1289              	.LBE36:
 1290              	.LBB37:
 428:Src/main.c    ****             }
 1291              		.loc 1 428 0 discriminator 3
 1292 008e 194A     		ldr	r2, .L109+32
 1293 0090 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1294 0092 1549     		ldr	r1, .L109+20
 1295 0094 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1296 0096 1948     		ldr	r0, .L109+40
 1297 0098 5424     		movs	r4, #84
 1298 009a 04FB0202 		mla	r2, r4, r2, r0
 1299 009e D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 35


 427:Src/main.c    ****                 sdBufferB[iTim][i] = timeBuffer[i];
 1300              		.loc 1 427 0 discriminator 3
 1301 00a0 0133     		adds	r3, r3, #1
 1302              	.LVL121:
 1303              	.L94:
 427:Src/main.c    ****                 sdBufferB[iTim][i] = timeBuffer[i];
 1304              		.loc 1 427 0 is_stmt 0 discriminator 1
 1305 00a2 0A2B     		cmp	r3, #10
 1306 00a4 F3DD     		ble	.L96
 1307 00a6 E7E7     		b	.L93
 1308              	.LVL122:
 1309              	.L107:
 427:Src/main.c    ****                 sdBufferB[iTim][i] = timeBuffer[i];
 1310              		.loc 1 427 0
 1311 00a8 0023     		movs	r3, #0
 1312 00aa FAE7     		b	.L94
 1313              	.LVL123:
 1314              	.L98:
 1315              	.LBE37:
 1316              	.LBB38:
 433:Src/main.c    ****             }
 1317              		.loc 1 433 0 is_stmt 1 discriminator 3
 1318 00ac 114A     		ldr	r2, .L109+32
 1319 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1320 00b0 0D49     		ldr	r1, .L109+20
 1321 00b2 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1322 00b4 1248     		ldr	r0, .L109+44
 1323 00b6 5424     		movs	r4, #84
 1324 00b8 04FB0202 		mla	r2, r4, r2, r0
 1325 00bc D154     		strb	r1, [r2, r3]
 432:Src/main.c    ****                 sdBufferC[iTim][i] = timeBuffer[i];
 1326              		.loc 1 432 0 discriminator 3
 1327 00be 0133     		adds	r3, r3, #1
 1328              	.LVL124:
 1329              	.L97:
 432:Src/main.c    ****                 sdBufferC[iTim][i] = timeBuffer[i];
 1330              		.loc 1 432 0 is_stmt 0 discriminator 1
 1331 00c0 0A2B     		cmp	r3, #10
 1332 00c2 F3DD     		ble	.L98
 1333 00c4 D8E7     		b	.L93
 1334              	.LVL125:
 1335              	.L108:
 1336              	.LBE38:
 439:Src/main.c    ****             iTim = 0;
 1337              		.loc 1 439 0 is_stmt 1
 1338 00c6 094B     		ldr	r3, .L109+24
 1339 00c8 0122     		movs	r2, #1
 1340 00ca 1A70     		strb	r2, [r3]
 440:Src/main.c    ****         }
 1341              		.loc 1 440 0
 1342 00cc 094B     		ldr	r3, .L109+32
 1343 00ce 0022     		movs	r2, #0
 1344 00d0 1A70     		strb	r2, [r3]
 1345              		.loc 1 444 0
 1346 00d2 D8E7     		b	.L87
 1347              	.L110:
 1348              		.align	2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 36


 1349              	.L109:
 1350 00d4 00000000 		.word	rawMpu
 1351 00d8 00000000 		.word	hi2c1
 1352 00dc 00000000 		.word	.LANCHOR0
 1353 00e0 00000000 		.word	.LANCHOR1
 1354 00e4 00000000 		.word	.LC3
 1355 00e8 00000000 		.word	timeBuffer
 1356 00ec 00000000 		.word	timReady
 1357 00f0 00000000 		.word	nBuffer
 1358 00f4 00000000 		.word	.LANCHOR2
 1359 00f8 00000000 		.word	sdBufferA
 1360 00fc 00000000 		.word	sdBufferB
 1361 0100 00000000 		.word	sdBufferC
 1362              		.cfi_endproc
 1363              	.LFE68:
 1365              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 1366              		.align	1
 1367              		.global	HAL_I2C_MemRxCpltCallback
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu softvfp
 1373              	HAL_I2C_MemRxCpltCallback:
 1374              	.LFB69:
 445:Src/main.c    **** 
 446:Src/main.c    **** void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
 447:Src/main.c    **** {
 1375              		.loc 1 447 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL126:
 1380 0000 70B5     		push	{r4, r5, r6, lr}
 1381              	.LCFI9:
 1382              		.cfi_def_cfa_offset 16
 1383              		.cfi_offset 4, -16
 1384              		.cfi_offset 5, -12
 1385              		.cfi_offset 6, -8
 1386              		.cfi_offset 14, -4
 1387 0002 84B0     		sub	sp, sp, #16
 1388              	.LCFI10:
 1389              		.cfi_def_cfa_offset 32
 448:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_SET);
 449:Src/main.c    **** 
 450:Src/main.c    ****     uint32_t xAcc = (rawMpu[0] << 8) | (0x00F0 & rawMpu[1]);
 1390              		.loc 1 450 0
 1391 0004 3949     		ldr	r1, .L131
 1392 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1393 0008 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1394 000a 02F0F002 		and	r2, r2, #240
 1395 000e 42EA0322 		orr	r2, r2, r3, lsl #8
 1396              	.LVL127:
 451:Src/main.c    ****     uint32_t yAcc = (rawMpu[2] << 8) | (0x00F0 & rawMpu[3]);
 1397              		.loc 1 451 0
 1398 0012 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1399              	.LVL128:
 1400 0014 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 37


 1401 0016 03F0F003 		and	r3, r3, #240
 1402 001a 43EA0023 		orr	r3, r3, r0, lsl #8
 1403              	.LVL129:
 452:Src/main.c    ****     uint32_t zAcc = (rawMpu[4] << 8) | (0x00F0 & rawMpu[5]);
 1404              		.loc 1 452 0
 1405 001e 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 1406 0020 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1407 0022 00F0F000 		and	r0, r0, #240
 1408 0026 40EA0420 		orr	r0, r0, r4, lsl #8
 1409              	.LVL130:
 453:Src/main.c    ****     uint32_t xGyr = (rawMpu[8] << 8) | (0x00FF & rawMpu[9]);
 1410              		.loc 1 453 0
 1411 002a 0D7A     		ldrb	r5, [r1, #8]	@ zero_extendqisi2
 1412 002c 4C7A     		ldrb	r4, [r1, #9]	@ zero_extendqisi2
 1413 002e 44EA0524 		orr	r4, r4, r5, lsl #8
 1414              	.LVL131:
 454:Src/main.c    ****     uint32_t yGyr = (rawMpu[10] << 8) | (0x00FF & rawMpu[11]);
 1415              		.loc 1 454 0
 1416 0032 8E7A     		ldrb	r6, [r1, #10]	@ zero_extendqisi2
 1417 0034 CD7A     		ldrb	r5, [r1, #11]	@ zero_extendqisi2
 1418 0036 45EA0625 		orr	r5, r5, r6, lsl #8
 1419              	.LVL132:
 455:Src/main.c    ****     uint32_t zGyr = (rawMpu[12] << 8) | (0x00FF & rawMpu[13]);
 1420              		.loc 1 455 0
 1421 003a 0E7B     		ldrb	r6, [r1, #12]	@ zero_extendqisi2
 1422 003c 497B     		ldrb	r1, [r1, #13]	@ zero_extendqisi2
 1423 003e 41EA0621 		orr	r1, r1, r6, lsl #8
 1424              	.LVL133:
 456:Src/main.c    **** 
 457:Src/main.c    ****     static uint8_t iMpu = 0;
 458:Src/main.c    **** 
 459:Src/main.c    ****     if(mpuReady == 0) {
 1425              		.loc 1 459 0
 1426 0042 2B4E     		ldr	r6, .L131+4
 1427 0044 3678     		ldrb	r6, [r6]	@ zero_extendqisi2
 1428 0046 0EB1     		cbz	r6, .L128
 1429              	.LVL134:
 1430              	.L111:
 460:Src/main.c    ****         sprintf(mpuBuffer, "%06hdA%06hdA%06hdA%06hdA%06hdA%06hd", xAcc, yAcc, zAcc, xGyr, yGyr, zGy
 461:Src/main.c    **** 
 462:Src/main.c    ****         if(nBuffer == 1) {
 463:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 464:Src/main.c    ****                 sdBufferA[iMpu][i+41] = mpuBuffer[i];
 465:Src/main.c    ****             }
 466:Src/main.c    ****         } else if(nBuffer == 2) {
 467:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 468:Src/main.c    ****                 sdBufferB[iMpu][i+41] = mpuBuffer[i];
 469:Src/main.c    ****             }
 470:Src/main.c    ****         }
 471:Src/main.c    ****         else if(nBuffer == 3) {
 472:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 473:Src/main.c    ****                 sdBufferC[iMpu][i+41] = mpuBuffer[i];
 474:Src/main.c    ****             }
 475:Src/main.c    ****         }
 476:Src/main.c    **** 
 477:Src/main.c    ****         iMpu++;
 478:Src/main.c    ****         if (iMpu == 20) {
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 38


 479:Src/main.c    ****             mpuReady = 1;
 480:Src/main.c    ****             iMpu = 0;
 481:Src/main.c    ****         }
 482:Src/main.c    ****     }
 483:Src/main.c    **** 
 484:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
 485:Src/main.c    **** }
 1431              		.loc 1 485 0
 1432 0048 04B0     		add	sp, sp, #16
 1433              	.LCFI11:
 1434              		.cfi_remember_state
 1435              		.cfi_def_cfa_offset 16
 1436              		@ sp needed
 1437 004a 70BD     		pop	{r4, r5, r6, pc}
 1438              	.LVL135:
 1439              	.L128:
 1440              	.LCFI12:
 1441              		.cfi_restore_state
 460:Src/main.c    ****         sprintf(mpuBuffer, "%06hdA%06hdA%06hdA%06hdA%06hdA%06hd", xAcc, yAcc, zAcc, xGyr, yGyr, zGy
 1442              		.loc 1 460 0
 1443 004c 0391     		str	r1, [sp, #12]
 1444 004e 0295     		str	r5, [sp, #8]
 1445 0050 0194     		str	r4, [sp, #4]
 1446 0052 0090     		str	r0, [sp]
 1447 0054 2749     		ldr	r1, .L131+8
 1448              	.LVL136:
 1449 0056 2848     		ldr	r0, .L131+12
 1450              	.LVL137:
 1451 0058 FFF7FEFF 		bl	sprintf
 1452              	.LVL138:
 462:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 1453              		.loc 1 462 0
 1454 005c 274B     		ldr	r3, .L131+16
 1455 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 0060 012B     		cmp	r3, #1
 1457 0062 21D0     		beq	.L129
 466:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 1458              		.loc 1 466 0
 1459 0064 022B     		cmp	r3, #2
 1460 0066 30D0     		beq	.L130
 471:Src/main.c    ****             for (int i = 0; i < 41; i++) {
 1461              		.loc 1 471 0
 1462 0068 032B     		cmp	r3, #3
 1463 006a 0FD1     		bne	.L116
 1464              	.LBB39:
 472:Src/main.c    ****                 sdBufferC[iMpu][i+41] = mpuBuffer[i];
 1465              		.loc 1 472 0
 1466 006c 0023     		movs	r3, #0
 1467 006e 3AE0     		b	.L120
 1468              	.LVL139:
 1469              	.L115:
 1470              	.LBE39:
 1471              	.LBB40:
 464:Src/main.c    ****             }
 1472              		.loc 1 464 0 discriminator 3
 1473 0070 234A     		ldr	r2, .L131+20
 1474 0072 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 39


 1475 0074 03F12901 		add	r1, r3, #41
 1476 0078 1F48     		ldr	r0, .L131+12
 1477 007a C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1478 007c 214C     		ldr	r4, .L131+24
 1479 007e 5425     		movs	r5, #84
 1480 0080 05FB0242 		mla	r2, r5, r2, r4
 1481 0084 5054     		strb	r0, [r2, r1]
 463:Src/main.c    ****                 sdBufferA[iMpu][i+41] = mpuBuffer[i];
 1482              		.loc 1 463 0 discriminator 3
 1483 0086 0133     		adds	r3, r3, #1
 1484              	.LVL140:
 1485              	.L113:
 463:Src/main.c    ****                 sdBufferA[iMpu][i+41] = mpuBuffer[i];
 1486              		.loc 1 463 0 is_stmt 0 discriminator 1
 1487 0088 282B     		cmp	r3, #40
 1488 008a F1DD     		ble	.L115
 1489              	.LVL141:
 1490              	.L116:
 1491              	.LBE40:
 477:Src/main.c    ****         if (iMpu == 20) {
 1492              		.loc 1 477 0 is_stmt 1
 1493 008c 1C4A     		ldr	r2, .L131+20
 1494 008e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1495 0090 0133     		adds	r3, r3, #1
 1496 0092 DBB2     		uxtb	r3, r3
 1497 0094 1370     		strb	r3, [r2]
 478:Src/main.c    ****             mpuReady = 1;
 1498              		.loc 1 478 0
 1499 0096 142B     		cmp	r3, #20
 1500 0098 D6D1     		bne	.L111
 479:Src/main.c    ****             iMpu = 0;
 1501              		.loc 1 479 0
 1502 009a 154B     		ldr	r3, .L131+4
 1503 009c 0122     		movs	r2, #1
 1504 009e 1A70     		strb	r2, [r3]
 480:Src/main.c    ****         }
 1505              		.loc 1 480 0
 1506 00a0 174B     		ldr	r3, .L131+20
 1507 00a2 0022     		movs	r2, #0
 1508 00a4 1A70     		strb	r2, [r3]
 1509              		.loc 1 485 0
 1510 00a6 CFE7     		b	.L111
 1511              	.LVL142:
 1512              	.L129:
 1513              	.LBB41:
 463:Src/main.c    ****                 sdBufferA[iMpu][i+41] = mpuBuffer[i];
 1514              		.loc 1 463 0
 1515 00a8 0023     		movs	r3, #0
 1516 00aa EDE7     		b	.L113
 1517              	.LVL143:
 1518              	.L119:
 1519              	.LBE41:
 1520              	.LBB42:
 468:Src/main.c    ****             }
 1521              		.loc 1 468 0 discriminator 3
 1522 00ac 144A     		ldr	r2, .L131+20
 1523 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 40


 1524 00b0 03F12901 		add	r1, r3, #41
 1525 00b4 1048     		ldr	r0, .L131+12
 1526 00b6 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1527 00b8 134C     		ldr	r4, .L131+28
 1528 00ba 5425     		movs	r5, #84
 1529 00bc 05FB0242 		mla	r2, r5, r2, r4
 1530 00c0 5054     		strb	r0, [r2, r1]
 467:Src/main.c    ****                 sdBufferB[iMpu][i+41] = mpuBuffer[i];
 1531              		.loc 1 467 0 discriminator 3
 1532 00c2 0133     		adds	r3, r3, #1
 1533              	.LVL144:
 1534              	.L117:
 467:Src/main.c    ****                 sdBufferB[iMpu][i+41] = mpuBuffer[i];
 1535              		.loc 1 467 0 is_stmt 0 discriminator 1
 1536 00c4 282B     		cmp	r3, #40
 1537 00c6 F1DD     		ble	.L119
 1538 00c8 E0E7     		b	.L116
 1539              	.LVL145:
 1540              	.L130:
 467:Src/main.c    ****                 sdBufferB[iMpu][i+41] = mpuBuffer[i];
 1541              		.loc 1 467 0
 1542 00ca 0023     		movs	r3, #0
 1543 00cc FAE7     		b	.L117
 1544              	.LVL146:
 1545              	.L121:
 1546              	.LBE42:
 1547              	.LBB43:
 473:Src/main.c    ****             }
 1548              		.loc 1 473 0 is_stmt 1 discriminator 3
 1549 00ce 0C4A     		ldr	r2, .L131+20
 1550 00d0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1551 00d2 03F12901 		add	r1, r3, #41
 1552 00d6 0848     		ldr	r0, .L131+12
 1553 00d8 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 1554 00da 0C4C     		ldr	r4, .L131+32
 1555 00dc 5425     		movs	r5, #84
 1556 00de 05FB0242 		mla	r2, r5, r2, r4
 1557 00e2 5054     		strb	r0, [r2, r1]
 472:Src/main.c    ****                 sdBufferC[iMpu][i+41] = mpuBuffer[i];
 1558              		.loc 1 472 0 discriminator 3
 1559 00e4 0133     		adds	r3, r3, #1
 1560              	.LVL147:
 1561              	.L120:
 472:Src/main.c    ****                 sdBufferC[iMpu][i+41] = mpuBuffer[i];
 1562              		.loc 1 472 0 is_stmt 0 discriminator 1
 1563 00e6 282B     		cmp	r3, #40
 1564 00e8 F1DD     		ble	.L121
 1565 00ea CFE7     		b	.L116
 1566              	.L132:
 1567              		.align	2
 1568              	.L131:
 1569 00ec 00000000 		.word	rawMpu
 1570 00f0 00000000 		.word	mpuReady
 1571 00f4 00000000 		.word	.LC4
 1572 00f8 00000000 		.word	mpuBuffer
 1573 00fc 00000000 		.word	nBuffer
 1574 0100 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 41


 1575 0104 00000000 		.word	sdBufferA
 1576 0108 00000000 		.word	sdBufferB
 1577 010c 00000000 		.word	sdBufferC
 1578              	.LBE43:
 1579              		.cfi_endproc
 1580              	.LFE69:
 1582              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1583              		.align	1
 1584              		.global	HAL_UART_RxCpltCallback
 1585              		.syntax unified
 1586              		.thumb
 1587              		.thumb_func
 1588              		.fpu softvfp
 1590              	HAL_UART_RxCpltCallback:
 1591              	.LFB70:
 486:Src/main.c    **** 
 487:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 488:Src/main.c    **** {
 1592              		.loc 1 488 0 is_stmt 1
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              		@ link register save eliminated.
 1597              	.LVL148:
 489:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_SET);
 490:Src/main.c    ****     // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 491:Src/main.c    **** }
 1598              		.loc 1 491 0
 1599 0000 7047     		bx	lr
 1600              		.cfi_endproc
 1601              	.LFE70:
 1603              		.section	.text.Error_Handler,"ax",%progbits
 1604              		.align	1
 1605              		.global	Error_Handler
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1609              		.fpu softvfp
 1611              	Error_Handler:
 1612              	.LFB71:
 492:Src/main.c    **** 
 493:Src/main.c    **** // void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 494:Src/main.c    **** // {
 495:Src/main.c    **** //     for (iAdc = 0; iAdc < 50; iAdc++) {
 496:Src/main.c    **** //         for (j = 0; j < 7; j++) {
 497:Src/main.c    **** //             buffer[iAdc][j] = rawAdc[7 * iAdc + j];
 498:Src/main.c    **** //         }
 499:Src/main.c    **** //         j = 0;
 500:Src/main.c    **** //     }
 501:Src/main.c    **** //     iAdc = 0;
 502:Src/main.c    **** //     adcReady = 1;
 503:Src/main.c    **** // }
 504:Src/main.c    **** /* USER CODE END 4 */
 505:Src/main.c    **** 
 506:Src/main.c    **** /**
 507:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 508:Src/main.c    ****   * @retval None
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 42


 509:Src/main.c    ****   */
 510:Src/main.c    **** void Error_Handler(void)
 511:Src/main.c    **** {
 1613              		.loc 1 511 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
 512:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 513:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state */
 514:Src/main.c    **** 
 515:Src/main.c    ****     /* USER CODE END Error_Handler_Debug */
 516:Src/main.c    **** }
 1618              		.loc 1 516 0
 1619 0000 7047     		bx	lr
 1620              		.cfi_endproc
 1621              	.LFE71:
 1623              		.comm	nBuffer,1,1
 1624              		.comm	timReady,1,1
 1625              		.comm	mpuReady,1,1
 1626              		.comm	adcReady,1,1
 1627              		.comm	rawMpu,14,4
 1628              		.comm	rawAdc,700,4
 1629              		.comm	sdBufferC,1680,4
 1630              		.comm	sdBufferB,1680,4
 1631              		.comm	sdBufferA,1680,4
 1632              		.comm	rawGps,69,4
 1633              		.comm	gpsReady,1,1
 1634              		.comm	timeBuffer,12,4
 1635              		.comm	mpuBuffer,42,4
 1636              		.comm	textTxBuffer,500,4
 1637              		.comm	res,1,1
 1638              		.comm	byteswritten,4,4
 1639              		.comm	SDPath,4,4
 1640              		.comm	MyFile,548,4
 1641              		.comm	SDFatFs,560,4
 1642              		.section	.bss.iMpu.8266,"aw",%nobits
 1643              		.set	.LANCHOR3,. + 0
 1646              	iMpu.8266:
 1647 0000 00       		.space	1
 1648              		.section	.bss.iTim.8244,"aw",%nobits
 1649              		.set	.LANCHOR2,. + 0
 1652              	iTim.8244:
 1653 0000 00       		.space	1
 1654              		.section	.bss.millis.8243,"aw",%nobits
 1655              		.align	2
 1656              		.set	.LANCHOR0,. + 0
 1659              	millis.8243:
 1660 0000 00000000 		.space	4
 1661              		.section	.bss.seconds.8242,"aw",%nobits
 1662              		.align	2
 1663              		.set	.LANCHOR1,. + 0
 1666              	seconds.8242:
 1667 0000 00000000 		.space	4
 1668              		.section	.rodata.HAL_I2C_MemRxCpltCallback.str1.4,"aMS",%progbits,1
 1669              		.align	2
 1670              	.LC4:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 43


 1671 0000 25303668 		.ascii	"%06hdA%06hdA%06hdA%06hdA%06hdA%06hd\000"
 1671      64412530 
 1671      36686441 
 1671      25303668 
 1671      64412530 
 1672              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 1673              		.align	2
 1674              	.LC3:
 1675 0000 25303664 		.ascii	"%06d.%03dA\000"
 1675      2E253033 
 1675      644100
 1676              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1677              		.align	2
 1678              	.LC0:
 1679 0000 62657461 		.ascii	"betaLogger USART1 test\015\000"
 1679      4C6F6767 
 1679      65722055 
 1679      53415254 
 1679      31207465 
 1680              	.LC1:
 1681 0018 66696C65 		.ascii	"file%04d.dlf\000"
 1681      25303464 
 1681      2E646C66 
 1681      00
 1682 0025 000000   		.space	3
 1683              	.LC2:
 1684 0028 2356320D 		.ascii	"#V2\015#DATASTART\015Datalog Time; GPS Latitude; GP"
 1684      23444154 
 1684      41535441 
 1684      52540D44 
 1684      6174616C 
 1685 0055 53204C6F 		.ascii	"S Longitude; GPS Speed;Ax;Ay;Az;Gx;Gy;Gz;\015seg.; "
 1685      6E676974 
 1685      7564653B 
 1685      20475053 
 1685      20537065 
 1686 0085 6465673B 		.ascii	"deg; deg; knots;un.;un.;un.;un.;un.;un.;\015\000"
 1686      20646567 
 1686      3B206B6E 
 1686      6F74733B 
 1686      756E2E3B 
 1687              		.text
 1688              	.Letext0:
 1689              		.file 2 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 1690              		.file 3 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 1691              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1692              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1693              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1694              		.file 7 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 1695              		.file 8 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 1696              		.file 9 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\lib
 1697              		.file 10 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\ar
 1698              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1699              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1700              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1701              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1702              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 44


 1703              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1704              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1705              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1706              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1707              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1708              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usb.h"
 1709              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_pcd.h"
 1710              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1711              		.file 24 "Inc/adc.h"
 1712              		.file 25 "Inc/i2c.h"
 1713              		.file 26 "Inc/spi.h"
 1714              		.file 27 "Inc/tim.h"
 1715              		.file 28 "Inc/usart.h"
 1716              		.file 29 "Inc/usb.h"
 1717              		.file 30 "Middlewares/Third_Party/FatFs/Src/integer.h"
 1718              		.file 31 "Middlewares/Third_Party/FatFs/Src/ff.h"
 1719              		.file 32 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\ar
 1720              		.file 33 "Inc/gpio.h"
 1721              		.file 34 "Inc/dma.h"
 1722              		.file 35 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\ar
 1723              		.file 36 "<built-in>"
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:16     .text.SystemClock_Config:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:23     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:115    .text.main:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:122    .text.main:00000000 main
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:746    .text.main:0000031c $d
                            *COM*:000001f4 textTxBuffer
                            *COM*:00000004 SDPath
                            *COM*:00000230 SDFatFs
                            *COM*:00000224 MyFile
                            *COM*:00000001 res
                            *COM*:00000004 byteswritten
                            *COM*:00000690 sdBufferA
                            *COM*:00000690 sdBufferB
                            *COM*:00000690 sdBufferC
                            *COM*:00000045 rawGps
                            *COM*:00000001 adcReady
                            *COM*:00000001 mpuReady
                            *COM*:00000001 gpsReady
                            *COM*:00000001 timReady
                            *COM*:00000001 nBuffer
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:772    .text.main:00000374 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1140   .text.main:0000054c $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1158   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1165   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1350   .text.HAL_TIM_PeriodElapsedCallback:000000d4 $d
                            *COM*:0000000e rawMpu
                            *COM*:0000000c timeBuffer
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1366   .text.HAL_I2C_MemRxCpltCallback:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1373   .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1569   .text.HAL_I2C_MemRxCpltCallback:000000ec $d
                            *COM*:0000002a mpuBuffer
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1583   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1590   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1604   .text.Error_Handler:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1611   .text.Error_Handler:00000000 Error_Handler
                            *COM*:000002bc rawAdc
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1646   .bss.iMpu.8266:00000000 iMpu.8266
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1647   .bss.iMpu.8266:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1652   .bss.iTim.8244:00000000 iTim.8244
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1653   .bss.iTim.8244:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1655   .bss.millis.8243:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1659   .bss.millis.8243:00000000 millis.8243
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1662   .bss.seconds.8242:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1666   .bss.seconds.8242:00000000 seconds.8242
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1669   .rodata.HAL_I2C_MemRxCpltCallback.str1.4:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1673   .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s:1677   .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccLwBxGp.s 			page 46


MX_TIM3_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_USART3_UART_Init
MX_ADC1_Init
MX_I2C1_Init
MX_USB_PCD_Init
strlen
HAL_UART_Transmit
f_mount
sprintf
f_open
memcpy
f_write
f_sync
HAL_I2C_Mem_Write
HAL_I2C_Mem_Read
HAL_TIM_Base_Start_IT
HAL_UART_Receive_DMA
huart1
hi2c1
htim3
huart3
HAL_GPIO_WritePin
HAL_Delay
HAL_GPIO_TogglePin
HAL_I2C_Mem_Read_IT
