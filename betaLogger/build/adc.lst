ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC1_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC1_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_ADC1_Init:
  24              	.LFB66:
  25              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC1 init function */
  31:Src/adc.c     **** void MX_ADC1_Init(void)
  32:Src/adc.c     **** {
  26              		.loc 1 32 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 2


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 85B0     		sub	sp, sp, #20
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  37              		.loc 1 33 0
  38 0004 0023     		movs	r3, #0
  39 0006 0193     		str	r3, [sp, #4]
  40 0008 0293     		str	r3, [sp, #8]
  41 000a 0393     		str	r3, [sp, #12]
  34:Src/adc.c     **** 
  35:Src/adc.c     ****   /** Common config 
  36:Src/adc.c     ****   */
  37:Src/adc.c     ****   hadc1.Instance = ADC1;
  42              		.loc 1 37 0
  43 000c 2B48     		ldr	r0, .L15
  44 000e 2C4A     		ldr	r2, .L15+4
  45 0010 0260     		str	r2, [r0]
  38:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  46              		.loc 1 38 0
  47 0012 4FF48072 		mov	r2, #256
  48 0016 8260     		str	r2, [r0, #8]
  39:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  49              		.loc 1 39 0
  50 0018 C360     		str	r3, [r0, #12]
  40:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  51              		.loc 1 40 0
  52 001a 4361     		str	r3, [r0, #20]
  41:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T3_TRGO;
  53              		.loc 1 41 0
  54 001c 4FF40022 		mov	r2, #524288
  55 0020 C261     		str	r2, [r0, #28]
  42:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  56              		.loc 1 42 0
  57 0022 4360     		str	r3, [r0, #4]
  43:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 5;
  58              		.loc 1 43 0
  59 0024 0523     		movs	r3, #5
  60 0026 0361     		str	r3, [r0, #16]
  44:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  61              		.loc 1 44 0
  62 0028 FFF7FEFF 		bl	HAL_ADC_Init
  63              	.LVL0:
  64 002c 0028     		cmp	r0, #0
  65 002e 32D1     		bne	.L9
  66              	.L2:
  45:Src/adc.c     ****   {
  46:Src/adc.c     ****     Error_Handler();
  47:Src/adc.c     ****   }
  48:Src/adc.c     ****   /** Configure Regular Channel 
  49:Src/adc.c     ****   */
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 3


  50:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_0;
  67              		.loc 1 50 0
  68 0030 0023     		movs	r3, #0
  69 0032 0193     		str	r3, [sp, #4]
  51:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  70              		.loc 1 51 0
  71 0034 0123     		movs	r3, #1
  72 0036 0293     		str	r3, [sp, #8]
  52:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_13CYCLES_5;
  73              		.loc 1 52 0
  74 0038 0223     		movs	r3, #2
  75 003a 0393     		str	r3, [sp, #12]
  53:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  76              		.loc 1 53 0
  77 003c 01A9     		add	r1, sp, #4
  78 003e 1F48     		ldr	r0, .L15
  79 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  80              	.LVL1:
  81 0044 50BB     		cbnz	r0, .L10
  82              	.L3:
  54:Src/adc.c     ****   {
  55:Src/adc.c     ****     Error_Handler();
  56:Src/adc.c     ****   }
  57:Src/adc.c     ****   /** Configure Regular Channel 
  58:Src/adc.c     ****   */
  59:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
  83              		.loc 1 59 0
  84 0046 0123     		movs	r3, #1
  85 0048 0193     		str	r3, [sp, #4]
  60:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
  86              		.loc 1 60 0
  87 004a 0223     		movs	r3, #2
  88 004c 0293     		str	r3, [sp, #8]
  61:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  89              		.loc 1 61 0
  90 004e 01A9     		add	r1, sp, #4
  91 0050 1A48     		ldr	r0, .L15
  92 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  93              	.LVL2:
  94 0056 20BB     		cbnz	r0, .L11
  95              	.L4:
  62:Src/adc.c     ****   {
  63:Src/adc.c     ****     Error_Handler();
  64:Src/adc.c     ****   }
  65:Src/adc.c     ****   /** Configure Regular Channel 
  66:Src/adc.c     ****   */
  67:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
  96              		.loc 1 67 0
  97 0058 0223     		movs	r3, #2
  98 005a 0193     		str	r3, [sp, #4]
  68:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_3;
  99              		.loc 1 68 0
 100 005c 0323     		movs	r3, #3
 101 005e 0293     		str	r3, [sp, #8]
  69:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 102              		.loc 1 69 0
 103 0060 01A9     		add	r1, sp, #4
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 4


 104 0062 1648     		ldr	r0, .L15
 105 0064 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 106              	.LVL3:
 107 0068 F0B9     		cbnz	r0, .L12
 108              	.L5:
  70:Src/adc.c     ****   {
  71:Src/adc.c     ****     Error_Handler();
  72:Src/adc.c     ****   }
  73:Src/adc.c     ****   /** Configure Regular Channel 
  74:Src/adc.c     ****   */
  75:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_3;
 109              		.loc 1 75 0
 110 006a 0323     		movs	r3, #3
 111 006c 0193     		str	r3, [sp, #4]
  76:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 112              		.loc 1 76 0
 113 006e 0423     		movs	r3, #4
 114 0070 0293     		str	r3, [sp, #8]
  77:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 115              		.loc 1 77 0
 116 0072 0DEB0301 		add	r1, sp, r3
 117 0076 1148     		ldr	r0, .L15
 118 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 119              	.LVL4:
 120 007c B8B9     		cbnz	r0, .L13
 121              	.L6:
  78:Src/adc.c     ****   {
  79:Src/adc.c     ****     Error_Handler();
  80:Src/adc.c     ****   }
  81:Src/adc.c     ****   /** Configure Regular Channel 
  82:Src/adc.c     ****   */
  83:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_4;
 122              		.loc 1 83 0
 123 007e 0423     		movs	r3, #4
 124 0080 0193     		str	r3, [sp, #4]
  84:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 125              		.loc 1 84 0
 126 0082 0523     		movs	r3, #5
 127 0084 0293     		str	r3, [sp, #8]
  85:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 128              		.loc 1 85 0
 129 0086 01A9     		add	r1, sp, #4
 130 0088 0C48     		ldr	r0, .L15
 131 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 132              	.LVL5:
 133 008e 88B9     		cbnz	r0, .L14
 134              	.L1:
  86:Src/adc.c     ****   {
  87:Src/adc.c     ****     Error_Handler();
  88:Src/adc.c     ****   }
  89:Src/adc.c     **** 
  90:Src/adc.c     **** }
 135              		.loc 1 90 0
 136 0090 05B0     		add	sp, sp, #20
 137              	.LCFI2:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 5


 140              		@ sp needed
 141 0092 5DF804FB 		ldr	pc, [sp], #4
 142              	.L9:
 143              	.LCFI3:
 144              		.cfi_restore_state
  46:Src/adc.c     ****   }
 145              		.loc 1 46 0
 146 0096 FFF7FEFF 		bl	Error_Handler
 147              	.LVL6:
 148 009a C9E7     		b	.L2
 149              	.L10:
  55:Src/adc.c     ****   }
 150              		.loc 1 55 0
 151 009c FFF7FEFF 		bl	Error_Handler
 152              	.LVL7:
 153 00a0 D1E7     		b	.L3
 154              	.L11:
  63:Src/adc.c     ****   }
 155              		.loc 1 63 0
 156 00a2 FFF7FEFF 		bl	Error_Handler
 157              	.LVL8:
 158 00a6 D7E7     		b	.L4
 159              	.L12:
  71:Src/adc.c     ****   }
 160              		.loc 1 71 0
 161 00a8 FFF7FEFF 		bl	Error_Handler
 162              	.LVL9:
 163 00ac DDE7     		b	.L5
 164              	.L13:
  79:Src/adc.c     ****   }
 165              		.loc 1 79 0
 166 00ae FFF7FEFF 		bl	Error_Handler
 167              	.LVL10:
 168 00b2 E4E7     		b	.L6
 169              	.L14:
  87:Src/adc.c     ****   }
 170              		.loc 1 87 0
 171 00b4 FFF7FEFF 		bl	Error_Handler
 172              	.LVL11:
 173              		.loc 1 90 0
 174 00b8 EAE7     		b	.L1
 175              	.L16:
 176 00ba 00BF     		.align	2
 177              	.L15:
 178 00bc 00000000 		.word	hadc1
 179 00c0 00240140 		.word	1073816576
 180              		.cfi_endproc
 181              	.LFE66:
 183              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_ADC_MspInit
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu softvfp
 191              	HAL_ADC_MspInit:
 192              	.LFB67:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 6


  91:Src/adc.c     **** 
  92:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  93:Src/adc.c     **** {
 193              		.loc 1 93 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 24
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL12:
 198 0000 10B5     		push	{r4, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 203 0002 86B0     		sub	sp, sp, #24
 204              	.LCFI5:
 205              		.cfi_def_cfa_offset 32
  94:Src/adc.c     **** 
  95:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 206              		.loc 1 95 0
 207 0004 0023     		movs	r3, #0
 208 0006 0293     		str	r3, [sp, #8]
 209 0008 0393     		str	r3, [sp, #12]
 210 000a 0493     		str	r3, [sp, #16]
 211 000c 0593     		str	r3, [sp, #20]
  96:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 212              		.loc 1 96 0
 213 000e 0268     		ldr	r2, [r0]
 214 0010 234B     		ldr	r3, .L23
 215 0012 9A42     		cmp	r2, r3
 216 0014 01D0     		beq	.L21
 217              	.LVL13:
 218              	.L17:
  97:Src/adc.c     ****   {
  98:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  99:Src/adc.c     **** 
 100:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 101:Src/adc.c     ****     /* ADC1 clock enable */
 102:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 103:Src/adc.c     ****   
 104:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 105:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 106:Src/adc.c     ****     PA0-WKUP     ------> ADC1_IN0
 107:Src/adc.c     ****     PA1     ------> ADC1_IN1
 108:Src/adc.c     ****     PA2     ------> ADC1_IN2
 109:Src/adc.c     ****     PA3     ------> ADC1_IN3
 110:Src/adc.c     ****     PA4     ------> ADC1_IN4 
 111:Src/adc.c     ****     */
 112:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 113:Src/adc.c     ****                           |GPIO_PIN_4;
 114:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 115:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 116:Src/adc.c     **** 
 117:Src/adc.c     ****     /* ADC1 DMA Init */
 118:Src/adc.c     ****     /* ADC1 Init */
 119:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 120:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 121:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 7


 122:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 123:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 124:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 125:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 126:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 127:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 128:Src/adc.c     ****     {
 129:Src/adc.c     ****       Error_Handler();
 130:Src/adc.c     ****     }
 131:Src/adc.c     **** 
 132:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 133:Src/adc.c     **** 
 134:Src/adc.c     ****     /* ADC1 interrupt Init */
 135:Src/adc.c     ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 0, 0);
 136:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 137:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 138:Src/adc.c     **** 
 139:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 140:Src/adc.c     ****   }
 141:Src/adc.c     **** }
 219              		.loc 1 141 0
 220 0016 06B0     		add	sp, sp, #24
 221              	.LCFI6:
 222              		.cfi_remember_state
 223              		.cfi_def_cfa_offset 8
 224              		@ sp needed
 225 0018 10BD     		pop	{r4, pc}
 226              	.LVL14:
 227              	.L21:
 228              	.LCFI7:
 229              		.cfi_restore_state
 230 001a 0446     		mov	r4, r0
 231              	.LBB2:
 102:Src/adc.c     ****   
 232              		.loc 1 102 0
 233 001c 03F56C43 		add	r3, r3, #60416
 234 0020 9A69     		ldr	r2, [r3, #24]
 235 0022 42F40072 		orr	r2, r2, #512
 236 0026 9A61     		str	r2, [r3, #24]
 237 0028 9A69     		ldr	r2, [r3, #24]
 238 002a 02F40072 		and	r2, r2, #512
 239 002e 0092     		str	r2, [sp]
 240 0030 009A     		ldr	r2, [sp]
 241              	.LBE2:
 242              	.LBB3:
 104:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 243              		.loc 1 104 0
 244 0032 9A69     		ldr	r2, [r3, #24]
 245 0034 42F00402 		orr	r2, r2, #4
 246 0038 9A61     		str	r2, [r3, #24]
 247 003a 9B69     		ldr	r3, [r3, #24]
 248 003c 03F00403 		and	r3, r3, #4
 249 0040 0193     		str	r3, [sp, #4]
 250 0042 019B     		ldr	r3, [sp, #4]
 251              	.LBE3:
 112:Src/adc.c     ****                           |GPIO_PIN_4;
 252              		.loc 1 112 0
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 8


 253 0044 1F23     		movs	r3, #31
 254 0046 0293     		str	r3, [sp, #8]
 114:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 255              		.loc 1 114 0
 256 0048 0323     		movs	r3, #3
 257 004a 0393     		str	r3, [sp, #12]
 115:Src/adc.c     **** 
 258              		.loc 1 115 0
 259 004c 02A9     		add	r1, sp, #8
 260 004e 1548     		ldr	r0, .L23+4
 261              	.LVL15:
 262 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL16:
 119:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 264              		.loc 1 119 0
 265 0054 1448     		ldr	r0, .L23+8
 266 0056 154B     		ldr	r3, .L23+12
 267 0058 0360     		str	r3, [r0]
 120:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 268              		.loc 1 120 0
 269 005a 0023     		movs	r3, #0
 270 005c 4360     		str	r3, [r0, #4]
 121:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 271              		.loc 1 121 0
 272 005e 8360     		str	r3, [r0, #8]
 122:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 273              		.loc 1 122 0
 274 0060 8023     		movs	r3, #128
 275 0062 C360     		str	r3, [r0, #12]
 123:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 276              		.loc 1 123 0
 277 0064 4FF48073 		mov	r3, #256
 278 0068 0361     		str	r3, [r0, #16]
 124:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 279              		.loc 1 124 0
 280 006a 4FF48063 		mov	r3, #1024
 281 006e 4361     		str	r3, [r0, #20]
 125:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 282              		.loc 1 125 0
 283 0070 2023     		movs	r3, #32
 284 0072 8361     		str	r3, [r0, #24]
 126:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 285              		.loc 1 126 0
 286 0074 4FF40053 		mov	r3, #8192
 287 0078 C361     		str	r3, [r0, #28]
 127:Src/adc.c     ****     {
 288              		.loc 1 127 0
 289 007a FFF7FEFF 		bl	HAL_DMA_Init
 290              	.LVL17:
 291 007e 58B9     		cbnz	r0, .L22
 292              	.L19:
 132:Src/adc.c     **** 
 293              		.loc 1 132 0
 294 0080 094B     		ldr	r3, .L23+8
 295 0082 2362     		str	r3, [r4, #32]
 296 0084 5C62     		str	r4, [r3, #36]
 135:Src/adc.c     ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 9


 297              		.loc 1 135 0
 298 0086 0022     		movs	r2, #0
 299 0088 1146     		mov	r1, r2
 300 008a 1220     		movs	r0, #18
 301 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 302              	.LVL18:
 136:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 303              		.loc 1 136 0
 304 0090 1220     		movs	r0, #18
 305 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 306              	.LVL19:
 307              		.loc 1 141 0
 308 0096 BEE7     		b	.L17
 309              	.L22:
 129:Src/adc.c     ****     }
 310              		.loc 1 129 0
 311 0098 FFF7FEFF 		bl	Error_Handler
 312              	.LVL20:
 313 009c F0E7     		b	.L19
 314              	.L24:
 315 009e 00BF     		.align	2
 316              	.L23:
 317 00a0 00240140 		.word	1073816576
 318 00a4 00080140 		.word	1073809408
 319 00a8 00000000 		.word	hdma_adc1
 320 00ac 08000240 		.word	1073872904
 321              		.cfi_endproc
 322              	.LFE67:
 324              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 325              		.align	1
 326              		.global	HAL_ADC_MspDeInit
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu softvfp
 332              	HAL_ADC_MspDeInit:
 333              	.LFB68:
 142:Src/adc.c     **** 
 143:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 144:Src/adc.c     **** {
 334              		.loc 1 144 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL21:
 145:Src/adc.c     **** 
 146:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 339              		.loc 1 146 0
 340 0000 0268     		ldr	r2, [r0]
 341 0002 0B4B     		ldr	r3, .L32
 342 0004 9A42     		cmp	r2, r3
 343 0006 00D0     		beq	.L31
 344 0008 7047     		bx	lr
 345              	.L31:
 144:Src/adc.c     **** 
 346              		.loc 1 144 0
 347 000a 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 10


 348              	.LCFI8:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 352 000c 0446     		mov	r4, r0
 147:Src/adc.c     ****   {
 148:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 149:Src/adc.c     **** 
 150:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 151:Src/adc.c     ****     /* Peripheral clock disable */
 152:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 353              		.loc 1 152 0
 354 000e 094A     		ldr	r2, .L32+4
 355 0010 9369     		ldr	r3, [r2, #24]
 356 0012 23F40073 		bic	r3, r3, #512
 357 0016 9361     		str	r3, [r2, #24]
 153:Src/adc.c     ****   
 154:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 155:Src/adc.c     ****     PA0-WKUP     ------> ADC1_IN0
 156:Src/adc.c     ****     PA1     ------> ADC1_IN1
 157:Src/adc.c     ****     PA2     ------> ADC1_IN2
 158:Src/adc.c     ****     PA3     ------> ADC1_IN3
 159:Src/adc.c     ****     PA4     ------> ADC1_IN4 
 160:Src/adc.c     ****     */
 161:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 358              		.loc 1 161 0
 359 0018 1F21     		movs	r1, #31
 360 001a 0748     		ldr	r0, .L32+8
 361              	.LVL22:
 362 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 363              	.LVL23:
 162:Src/adc.c     ****                           |GPIO_PIN_4);
 163:Src/adc.c     **** 
 164:Src/adc.c     ****     /* ADC1 DMA DeInit */
 165:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 364              		.loc 1 165 0
 365 0020 206A     		ldr	r0, [r4, #32]
 366 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 367              	.LVL24:
 166:Src/adc.c     **** 
 167:Src/adc.c     ****     /* ADC1 interrupt Deinit */
 168:Src/adc.c     ****     HAL_NVIC_DisableIRQ(ADC1_2_IRQn);
 368              		.loc 1 168 0
 369 0026 1220     		movs	r0, #18
 370 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 371              	.LVL25:
 169:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 170:Src/adc.c     **** 
 171:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 172:Src/adc.c     ****   }
 173:Src/adc.c     **** } 
 372              		.loc 1 173 0
 373 002c 10BD     		pop	{r4, pc}
 374              	.LVL26:
 375              	.L33:
 376 002e 00BF     		.align	2
 377              	.L32:
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 11


 378 0030 00240140 		.word	1073816576
 379 0034 00100240 		.word	1073876992
 380 0038 00080140 		.word	1073809408
 381              		.cfi_endproc
 382              	.LFE68:
 384              		.comm	hdma_adc1,68,4
 385              		.comm	hadc1,48,4
 386              		.text
 387              	.Letext0:
 388              		.file 2 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 389              		.file 3 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 390              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 391              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 392              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 393              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 394              		.file 8 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 395              		.file 9 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\arm
 396              		.file 10 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\li
 397              		.file 11 "c:\\program files (x86)\\embedded toolchain\\gnu tools arm embedded\\7 2017-q4-major\\ar
 398              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 399              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 400              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 401              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 402              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 403              		.file 17 "Inc/adc.h"
 404              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 405              		.file 19 "Inc/main.h"
ARM GAS  C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:16     .text.MX_ADC1_Init:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:23     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:178    .text.MX_ADC1_Init:000000bc $d
                            *COM*:00000030 hadc1
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:184    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:191    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:317    .text.HAL_ADC_MspInit:000000a0 $d
                            *COM*:00000044 hdma_adc1
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:325    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:332    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\Patrick\AppData\Local\Temp\ccIqVSsP.s:378    .text.HAL_ADC_MspDeInit:00000030 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
